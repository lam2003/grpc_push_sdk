// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pushGateWay.proto

#ifndef PROTOBUF_INCLUDED_pushGateWay_2eproto
#define PROTOBUF_INCLUDED_pushGateWay_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_pushGateWay_2eproto 

namespace protobuf_pushGateWay_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[20];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_pushGateWay_2eproto
namespace grpc {
namespace push {
namespace gateway {
class JoinGroupRequest;
class JoinGroupRequestDefaultTypeInternal;
extern JoinGroupRequestDefaultTypeInternal _JoinGroupRequest_default_instance_;
class JoinGroupResponse;
class JoinGroupResponseDefaultTypeInternal;
extern JoinGroupResponseDefaultTypeInternal _JoinGroupResponse_default_instance_;
class LeaveGroupRequest;
class LeaveGroupRequestDefaultTypeInternal;
extern LeaveGroupRequestDefaultTypeInternal _LeaveGroupRequest_default_instance_;
class LeaveGroupResponse;
class LeaveGroupResponseDefaultTypeInternal;
extern LeaveGroupResponseDefaultTypeInternal _LeaveGroupResponse_default_instance_;
class LoginRequest;
class LoginRequestDefaultTypeInternal;
extern LoginRequestDefaultTypeInternal _LoginRequest_default_instance_;
class LoginResponse;
class LoginResponseDefaultTypeInternal;
extern LoginResponseDefaultTypeInternal _LoginResponse_default_instance_;
class LogoutRequest;
class LogoutRequestDefaultTypeInternal;
extern LogoutRequestDefaultTypeInternal _LogoutRequest_default_instance_;
class LogoutResponse;
class LogoutResponseDefaultTypeInternal;
extern LogoutResponseDefaultTypeInternal _LogoutResponse_default_instance_;
class PingRequest;
class PingRequestDefaultTypeInternal;
extern PingRequestDefaultTypeInternal _PingRequest_default_instance_;
class PongResponse;
class PongResponseDefaultTypeInternal;
extern PongResponseDefaultTypeInternal _PongResponse_default_instance_;
class PushData;
class PushDataDefaultTypeInternal;
extern PushDataDefaultTypeInternal _PushData_default_instance_;
class PushData_Key2ExstrEntry_DoNotUse;
class PushData_Key2ExstrEntry_DoNotUseDefaultTypeInternal;
extern PushData_Key2ExstrEntry_DoNotUseDefaultTypeInternal _PushData_Key2ExstrEntry_DoNotUse_default_instance_;
class PushRegReq;
class PushRegReqDefaultTypeInternal;
extern PushRegReqDefaultTypeInternal _PushRegReq_default_instance_;
class PushToClientReq;
class PushToClientReqDefaultTypeInternal;
extern PushToClientReqDefaultTypeInternal _PushToClientReq_default_instance_;
class PushToClientReq_Key2ExstrEntry_DoNotUse;
class PushToClientReq_Key2ExstrEntry_DoNotUseDefaultTypeInternal;
extern PushToClientReq_Key2ExstrEntry_DoNotUseDefaultTypeInternal _PushToClientReq_Key2ExstrEntry_DoNotUse_default_instance_;
class PushToClientResp;
class PushToClientRespDefaultTypeInternal;
extern PushToClientRespDefaultTypeInternal _PushToClientResp_default_instance_;
class PushToGroupReq;
class PushToGroupReqDefaultTypeInternal;
extern PushToGroupReqDefaultTypeInternal _PushToGroupReq_default_instance_;
class PushToGroupReq_Key2ExstrEntry_DoNotUse;
class PushToGroupReq_Key2ExstrEntry_DoNotUseDefaultTypeInternal;
extern PushToGroupReq_Key2ExstrEntry_DoNotUseDefaultTypeInternal _PushToGroupReq_Key2ExstrEntry_DoNotUse_default_instance_;
class PushToGroupResp;
class PushToGroupRespDefaultTypeInternal;
extern PushToGroupRespDefaultTypeInternal _PushToGroupResp_default_instance_;
class UserGroup;
class UserGroupDefaultTypeInternal;
extern UserGroupDefaultTypeInternal _UserGroup_default_instance_;
}  // namespace gateway
}  // namespace push
}  // namespace grpc
namespace google {
namespace protobuf {
template<> ::grpc::push::gateway::JoinGroupRequest* Arena::CreateMaybeMessage<::grpc::push::gateway::JoinGroupRequest>(Arena*);
template<> ::grpc::push::gateway::JoinGroupResponse* Arena::CreateMaybeMessage<::grpc::push::gateway::JoinGroupResponse>(Arena*);
template<> ::grpc::push::gateway::LeaveGroupRequest* Arena::CreateMaybeMessage<::grpc::push::gateway::LeaveGroupRequest>(Arena*);
template<> ::grpc::push::gateway::LeaveGroupResponse* Arena::CreateMaybeMessage<::grpc::push::gateway::LeaveGroupResponse>(Arena*);
template<> ::grpc::push::gateway::LoginRequest* Arena::CreateMaybeMessage<::grpc::push::gateway::LoginRequest>(Arena*);
template<> ::grpc::push::gateway::LoginResponse* Arena::CreateMaybeMessage<::grpc::push::gateway::LoginResponse>(Arena*);
template<> ::grpc::push::gateway::LogoutRequest* Arena::CreateMaybeMessage<::grpc::push::gateway::LogoutRequest>(Arena*);
template<> ::grpc::push::gateway::LogoutResponse* Arena::CreateMaybeMessage<::grpc::push::gateway::LogoutResponse>(Arena*);
template<> ::grpc::push::gateway::PingRequest* Arena::CreateMaybeMessage<::grpc::push::gateway::PingRequest>(Arena*);
template<> ::grpc::push::gateway::PongResponse* Arena::CreateMaybeMessage<::grpc::push::gateway::PongResponse>(Arena*);
template<> ::grpc::push::gateway::PushData* Arena::CreateMaybeMessage<::grpc::push::gateway::PushData>(Arena*);
template<> ::grpc::push::gateway::PushData_Key2ExstrEntry_DoNotUse* Arena::CreateMaybeMessage<::grpc::push::gateway::PushData_Key2ExstrEntry_DoNotUse>(Arena*);
template<> ::grpc::push::gateway::PushRegReq* Arena::CreateMaybeMessage<::grpc::push::gateway::PushRegReq>(Arena*);
template<> ::grpc::push::gateway::PushToClientReq* Arena::CreateMaybeMessage<::grpc::push::gateway::PushToClientReq>(Arena*);
template<> ::grpc::push::gateway::PushToClientReq_Key2ExstrEntry_DoNotUse* Arena::CreateMaybeMessage<::grpc::push::gateway::PushToClientReq_Key2ExstrEntry_DoNotUse>(Arena*);
template<> ::grpc::push::gateway::PushToClientResp* Arena::CreateMaybeMessage<::grpc::push::gateway::PushToClientResp>(Arena*);
template<> ::grpc::push::gateway::PushToGroupReq* Arena::CreateMaybeMessage<::grpc::push::gateway::PushToGroupReq>(Arena*);
template<> ::grpc::push::gateway::PushToGroupReq_Key2ExstrEntry_DoNotUse* Arena::CreateMaybeMessage<::grpc::push::gateway::PushToGroupReq_Key2ExstrEntry_DoNotUse>(Arena*);
template<> ::grpc::push::gateway::PushToGroupResp* Arena::CreateMaybeMessage<::grpc::push::gateway::PushToGroupResp>(Arena*);
template<> ::grpc::push::gateway::UserGroup* Arena::CreateMaybeMessage<::grpc::push::gateway::UserGroup>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace grpc {
namespace push {
namespace gateway {

enum UserTerminalType {
  UTT_UNKNOWN = 0,
  UTT_DESKTOP = 1,
  UTT_WEB = 2,
  UTT_EDU = 3,
  UTT_IPAD = 4,
  UTT_APAD = 5,
  UTT_WEBYYH5 = 6,
  UTT_IPHONE = 7,
  UTT_ANDROID = 8,
  UTT_SERVER = 65535,
  UserTerminalType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  UserTerminalType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool UserTerminalType_IsValid(int value);
const UserTerminalType UserTerminalType_MIN = UTT_UNKNOWN;
const UserTerminalType UserTerminalType_MAX = UTT_SERVER;
const int UserTerminalType_ARRAYSIZE = UserTerminalType_MAX + 1;

const ::google::protobuf::EnumDescriptor* UserTerminalType_descriptor();
inline const ::std::string& UserTerminalType_Name(UserTerminalType value) {
  return ::google::protobuf::internal::NameOfEnum(
    UserTerminalType_descriptor(), value);
}
inline bool UserTerminalType_Parse(
    const ::std::string& name, UserTerminalType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UserTerminalType>(
    UserTerminalType_descriptor(), name, value);
}
enum StreamURI {
  PPushGateWayUNKNOWN = 0,
  PPushGateWayLoginURI = 1001,
  PPushGateWayLoginResURI = 1002,
  PPushGateWayLogoutURI = 1003,
  PPushGateWayLogoutResURI = 1004,
  PPushGateWayJoinGroupURI = 1005,
  PPushGateWayJoinGroupResURI = 1006,
  PPushGateWayLeaveGroupURI = 1007,
  PPushGateWayLeaveGroupResURI = 1008,
  PPushGateWayPingURI = 1009,
  PPushGateWayPongURI = 1010,
  PPushGateWayNotifyToCloseURI = 1011,
  PPushGateWayPushDataByUidURI = 1012,
  PPushGateWayPushDataByGroupURI = 1013,
  StreamURI_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  StreamURI_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool StreamURI_IsValid(int value);
const StreamURI StreamURI_MIN = PPushGateWayUNKNOWN;
const StreamURI StreamURI_MAX = PPushGateWayPushDataByGroupURI;
const int StreamURI_ARRAYSIZE = StreamURI_MAX + 1;

const ::google::protobuf::EnumDescriptor* StreamURI_descriptor();
inline const ::std::string& StreamURI_Name(StreamURI value) {
  return ::google::protobuf::internal::NameOfEnum(
    StreamURI_descriptor(), value);
}
inline bool StreamURI_Parse(
    const ::std::string& name, StreamURI* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StreamURI>(
    StreamURI_descriptor(), name, value);
}
// ===================================================================

class UserGroup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpc.push.gateway.UserGroup) */ {
 public:
  UserGroup();
  virtual ~UserGroup();

  UserGroup(const UserGroup& from);

  inline UserGroup& operator=(const UserGroup& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserGroup(UserGroup&& from) noexcept
    : UserGroup() {
    *this = ::std::move(from);
  }

  inline UserGroup& operator=(UserGroup&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserGroup& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserGroup* internal_default_instance() {
    return reinterpret_cast<const UserGroup*>(
               &_UserGroup_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(UserGroup* other);
  friend void swap(UserGroup& a, UserGroup& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserGroup* New() const final {
    return CreateMaybeMessage<UserGroup>(NULL);
  }

  UserGroup* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserGroup>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserGroup& from);
  void MergeFrom(const UserGroup& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserGroup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 userGroupType = 1;
  void clear_usergrouptype();
  static const int kUserGroupTypeFieldNumber = 1;
  ::google::protobuf::uint64 usergrouptype() const;
  void set_usergrouptype(::google::protobuf::uint64 value);

  // uint64 userGroupId = 2;
  void clear_usergroupid();
  static const int kUserGroupIdFieldNumber = 2;
  ::google::protobuf::uint64 usergroupid() const;
  void set_usergroupid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:grpc.push.gateway.UserGroup)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 usergrouptype_;
  ::google::protobuf::uint64 usergroupid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_pushGateWay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LoginRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpc.push.gateway.LoginRequest) */ {
 public:
  LoginRequest();
  virtual ~LoginRequest();

  LoginRequest(const LoginRequest& from);

  inline LoginRequest& operator=(const LoginRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginRequest(LoginRequest&& from) noexcept
    : LoginRequest() {
    *this = ::std::move(from);
  }

  inline LoginRequest& operator=(LoginRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoginRequest* internal_default_instance() {
    return reinterpret_cast<const LoginRequest*>(
               &_LoginRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(LoginRequest* other);
  friend void swap(LoginRequest& a, LoginRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginRequest* New() const final {
    return CreateMaybeMessage<LoginRequest>(NULL);
  }

  LoginRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LoginRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LoginRequest& from);
  void MergeFrom(const LoginRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoginRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string appid = 1;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  const ::std::string& appid() const;
  void set_appid(const ::std::string& value);
  #if LANG_CXX11
  void set_appid(::std::string&& value);
  #endif
  void set_appid(const char* value);
  void set_appid(const char* value, size_t size);
  ::std::string* mutable_appid();
  ::std::string* release_appid();
  void set_allocated_appid(::std::string* appid);

  // bytes ticket = 5;
  void clear_ticket();
  static const int kTicketFieldNumber = 5;
  const ::std::string& ticket() const;
  void set_ticket(const ::std::string& value);
  #if LANG_CXX11
  void set_ticket(::std::string&& value);
  #endif
  void set_ticket(const char* value);
  void set_ticket(const void* value, size_t size);
  ::std::string* mutable_ticket();
  ::std::string* release_ticket();
  void set_allocated_ticket(::std::string* ticket);

  // bytes cookie = 6;
  void clear_cookie();
  static const int kCookieFieldNumber = 6;
  const ::std::string& cookie() const;
  void set_cookie(const ::std::string& value);
  #if LANG_CXX11
  void set_cookie(::std::string&& value);
  #endif
  void set_cookie(const char* value);
  void set_cookie(const void* value, size_t size);
  ::std::string* mutable_cookie();
  ::std::string* release_cookie();
  void set_allocated_cookie(::std::string* cookie);

  // bytes context = 7;
  void clear_context();
  static const int kContextFieldNumber = 7;
  const ::std::string& context() const;
  void set_context(const ::std::string& value);
  #if LANG_CXX11
  void set_context(::std::string&& value);
  #endif
  void set_context(const char* value);
  void set_context(const void* value, size_t size);
  ::std::string* mutable_context();
  ::std::string* release_context();
  void set_allocated_context(::std::string* context);

  // string account = 8;
  void clear_account();
  static const int kAccountFieldNumber = 8;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // string password = 9;
  void clear_password();
  static const int kPasswordFieldNumber = 9;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // uint64 suid = 3;
  void clear_suid();
  static const int kSuidFieldNumber = 3;
  ::google::protobuf::uint64 suid() const;
  void set_suid(::google::protobuf::uint64 value);

  // uint32 uid = 2;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // bool reLogin = 4;
  void clear_relogin();
  static const int kReLoginFieldNumber = 4;
  bool relogin() const;
  void set_relogin(bool value);

  // uint64 appKey = 10;
  void clear_appkey();
  static const int kAppKeyFieldNumber = 10;
  ::google::protobuf::uint64 appkey() const;
  void set_appkey(::google::protobuf::uint64 value);

  // .grpc.push.gateway.UserTerminalType termnialType = 11;
  void clear_termnialtype();
  static const int kTermnialTypeFieldNumber = 11;
  ::grpc::push::gateway::UserTerminalType termnialtype() const;
  void set_termnialtype(::grpc::push::gateway::UserTerminalType value);

  // @@protoc_insertion_point(class_scope:grpc.push.gateway.LoginRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr appid_;
  ::google::protobuf::internal::ArenaStringPtr ticket_;
  ::google::protobuf::internal::ArenaStringPtr cookie_;
  ::google::protobuf::internal::ArenaStringPtr context_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::uint64 suid_;
  ::google::protobuf::uint32 uid_;
  bool relogin_;
  ::google::protobuf::uint64 appkey_;
  int termnialtype_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_pushGateWay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LoginResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpc.push.gateway.LoginResponse) */ {
 public:
  LoginResponse();
  virtual ~LoginResponse();

  LoginResponse(const LoginResponse& from);

  inline LoginResponse& operator=(const LoginResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginResponse(LoginResponse&& from) noexcept
    : LoginResponse() {
    *this = ::std::move(from);
  }

  inline LoginResponse& operator=(LoginResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoginResponse* internal_default_instance() {
    return reinterpret_cast<const LoginResponse*>(
               &_LoginResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(LoginResponse* other);
  friend void swap(LoginResponse& a, LoginResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginResponse* New() const final {
    return CreateMaybeMessage<LoginResponse>(NULL);
  }

  LoginResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LoginResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LoginResponse& from);
  void MergeFrom(const LoginResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoginResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes context = 4;
  void clear_context();
  static const int kContextFieldNumber = 4;
  const ::std::string& context() const;
  void set_context(const ::std::string& value);
  #if LANG_CXX11
  void set_context(::std::string&& value);
  #endif
  void set_context(const char* value);
  void set_context(const void* value, size_t size);
  ::std::string* mutable_context();
  ::std::string* release_context();
  void set_allocated_context(::std::string* context);

  // string errMsg = 12;
  void clear_errmsg();
  static const int kErrMsgFieldNumber = 12;
  const ::std::string& errmsg() const;
  void set_errmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_errmsg(::std::string&& value);
  #endif
  void set_errmsg(const char* value);
  void set_errmsg(const char* value, size_t size);
  ::std::string* mutable_errmsg();
  ::std::string* release_errmsg();
  void set_allocated_errmsg(::std::string* errmsg);

  // uint32 resCode = 1;
  void clear_rescode();
  static const int kResCodeFieldNumber = 1;
  ::google::protobuf::uint32 rescode() const;
  void set_rescode(::google::protobuf::uint32 value);

  // uint32 uid = 2;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint64 suid = 3;
  void clear_suid();
  static const int kSuidFieldNumber = 3;
  ::google::protobuf::uint64 suid() const;
  void set_suid(::google::protobuf::uint64 value);

  // uint64 pushgwIp = 5;
  void clear_pushgwip();
  static const int kPushgwIpFieldNumber = 5;
  ::google::protobuf::uint64 pushgwip() const;
  void set_pushgwip(::google::protobuf::uint64 value);

  // uint32 pushgwPort = 6;
  void clear_pushgwport();
  static const int kPushgwPortFieldNumber = 6;
  ::google::protobuf::uint32 pushgwport() const;
  void set_pushgwport(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:grpc.push.gateway.LoginResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr context_;
  ::google::protobuf::internal::ArenaStringPtr errmsg_;
  ::google::protobuf::uint32 rescode_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint64 suid_;
  ::google::protobuf::uint64 pushgwip_;
  ::google::protobuf::uint32 pushgwport_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_pushGateWay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LogoutRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpc.push.gateway.LogoutRequest) */ {
 public:
  LogoutRequest();
  virtual ~LogoutRequest();

  LogoutRequest(const LogoutRequest& from);

  inline LogoutRequest& operator=(const LogoutRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LogoutRequest(LogoutRequest&& from) noexcept
    : LogoutRequest() {
    *this = ::std::move(from);
  }

  inline LogoutRequest& operator=(LogoutRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LogoutRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LogoutRequest* internal_default_instance() {
    return reinterpret_cast<const LogoutRequest*>(
               &_LogoutRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(LogoutRequest* other);
  friend void swap(LogoutRequest& a, LogoutRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LogoutRequest* New() const final {
    return CreateMaybeMessage<LogoutRequest>(NULL);
  }

  LogoutRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LogoutRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LogoutRequest& from);
  void MergeFrom(const LogoutRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LogoutRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string appid = 1;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  const ::std::string& appid() const;
  void set_appid(const ::std::string& value);
  #if LANG_CXX11
  void set_appid(::std::string&& value);
  #endif
  void set_appid(const char* value);
  void set_appid(const char* value, size_t size);
  ::std::string* mutable_appid();
  ::std::string* release_appid();
  void set_allocated_appid(::std::string* appid);

  // bytes context = 4;
  void clear_context();
  static const int kContextFieldNumber = 4;
  const ::std::string& context() const;
  void set_context(const ::std::string& value);
  #if LANG_CXX11
  void set_context(::std::string&& value);
  #endif
  void set_context(const char* value);
  void set_context(const void* value, size_t size);
  ::std::string* mutable_context();
  ::std::string* release_context();
  void set_allocated_context(::std::string* context);

  // uint64 suid = 2;
  void clear_suid();
  static const int kSuidFieldNumber = 2;
  ::google::protobuf::uint64 suid() const;
  void set_suid(::google::protobuf::uint64 value);

  // uint32 uid = 3;
  void clear_uid();
  static const int kUidFieldNumber = 3;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // .grpc.push.gateway.UserTerminalType termnialType = 6;
  void clear_termnialtype();
  static const int kTermnialTypeFieldNumber = 6;
  ::grpc::push::gateway::UserTerminalType termnialtype() const;
  void set_termnialtype(::grpc::push::gateway::UserTerminalType value);

  // uint64 appKey = 5;
  void clear_appkey();
  static const int kAppKeyFieldNumber = 5;
  ::google::protobuf::uint64 appkey() const;
  void set_appkey(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:grpc.push.gateway.LogoutRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr appid_;
  ::google::protobuf::internal::ArenaStringPtr context_;
  ::google::protobuf::uint64 suid_;
  ::google::protobuf::uint32 uid_;
  int termnialtype_;
  ::google::protobuf::uint64 appkey_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_pushGateWay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LogoutResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpc.push.gateway.LogoutResponse) */ {
 public:
  LogoutResponse();
  virtual ~LogoutResponse();

  LogoutResponse(const LogoutResponse& from);

  inline LogoutResponse& operator=(const LogoutResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LogoutResponse(LogoutResponse&& from) noexcept
    : LogoutResponse() {
    *this = ::std::move(from);
  }

  inline LogoutResponse& operator=(LogoutResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LogoutResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LogoutResponse* internal_default_instance() {
    return reinterpret_cast<const LogoutResponse*>(
               &_LogoutResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(LogoutResponse* other);
  friend void swap(LogoutResponse& a, LogoutResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LogoutResponse* New() const final {
    return CreateMaybeMessage<LogoutResponse>(NULL);
  }

  LogoutResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LogoutResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LogoutResponse& from);
  void MergeFrom(const LogoutResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LogoutResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes context = 4;
  void clear_context();
  static const int kContextFieldNumber = 4;
  const ::std::string& context() const;
  void set_context(const ::std::string& value);
  #if LANG_CXX11
  void set_context(::std::string&& value);
  #endif
  void set_context(const char* value);
  void set_context(const void* value, size_t size);
  ::std::string* mutable_context();
  ::std::string* release_context();
  void set_allocated_context(::std::string* context);

  // string errMsg = 12;
  void clear_errmsg();
  static const int kErrMsgFieldNumber = 12;
  const ::std::string& errmsg() const;
  void set_errmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_errmsg(::std::string&& value);
  #endif
  void set_errmsg(const char* value);
  void set_errmsg(const char* value, size_t size);
  ::std::string* mutable_errmsg();
  ::std::string* release_errmsg();
  void set_allocated_errmsg(::std::string* errmsg);

  // uint32 resCode = 1;
  void clear_rescode();
  static const int kResCodeFieldNumber = 1;
  ::google::protobuf::uint32 rescode() const;
  void set_rescode(::google::protobuf::uint32 value);

  // uint32 uid = 2;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint64 suid = 3;
  void clear_suid();
  static const int kSuidFieldNumber = 3;
  ::google::protobuf::uint64 suid() const;
  void set_suid(::google::protobuf::uint64 value);

  // uint64 pushgwIp = 5;
  void clear_pushgwip();
  static const int kPushgwIpFieldNumber = 5;
  ::google::protobuf::uint64 pushgwip() const;
  void set_pushgwip(::google::protobuf::uint64 value);

  // uint32 pushgwPort = 6;
  void clear_pushgwport();
  static const int kPushgwPortFieldNumber = 6;
  ::google::protobuf::uint32 pushgwport() const;
  void set_pushgwport(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:grpc.push.gateway.LogoutResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr context_;
  ::google::protobuf::internal::ArenaStringPtr errmsg_;
  ::google::protobuf::uint32 rescode_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint64 suid_;
  ::google::protobuf::uint64 pushgwip_;
  ::google::protobuf::uint32 pushgwport_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_pushGateWay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class JoinGroupRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpc.push.gateway.JoinGroupRequest) */ {
 public:
  JoinGroupRequest();
  virtual ~JoinGroupRequest();

  JoinGroupRequest(const JoinGroupRequest& from);

  inline JoinGroupRequest& operator=(const JoinGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  JoinGroupRequest(JoinGroupRequest&& from) noexcept
    : JoinGroupRequest() {
    *this = ::std::move(from);
  }

  inline JoinGroupRequest& operator=(JoinGroupRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinGroupRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JoinGroupRequest* internal_default_instance() {
    return reinterpret_cast<const JoinGroupRequest*>(
               &_JoinGroupRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(JoinGroupRequest* other);
  friend void swap(JoinGroupRequest& a, JoinGroupRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline JoinGroupRequest* New() const final {
    return CreateMaybeMessage<JoinGroupRequest>(NULL);
  }

  JoinGroupRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<JoinGroupRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const JoinGroupRequest& from);
  void MergeFrom(const JoinGroupRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(JoinGroupRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .grpc.push.gateway.UserGroup userGroupSet = 4;
  int usergroupset_size() const;
  void clear_usergroupset();
  static const int kUserGroupSetFieldNumber = 4;
  ::grpc::push::gateway::UserGroup* mutable_usergroupset(int index);
  ::google::protobuf::RepeatedPtrField< ::grpc::push::gateway::UserGroup >*
      mutable_usergroupset();
  const ::grpc::push::gateway::UserGroup& usergroupset(int index) const;
  ::grpc::push::gateway::UserGroup* add_usergroupset();
  const ::google::protobuf::RepeatedPtrField< ::grpc::push::gateway::UserGroup >&
      usergroupset() const;

  // bytes context = 3;
  void clear_context();
  static const int kContextFieldNumber = 3;
  const ::std::string& context() const;
  void set_context(const ::std::string& value);
  #if LANG_CXX11
  void set_context(::std::string&& value);
  #endif
  void set_context(const char* value);
  void set_context(const void* value, size_t size);
  ::std::string* mutable_context();
  ::std::string* release_context();
  void set_allocated_context(::std::string* context);

  // uint64 suid = 2;
  void clear_suid();
  static const int kSuidFieldNumber = 2;
  ::google::protobuf::uint64 suid() const;
  void set_suid(::google::protobuf::uint64 value);

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:grpc.push.gateway.JoinGroupRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::grpc::push::gateway::UserGroup > usergroupset_;
  ::google::protobuf::internal::ArenaStringPtr context_;
  ::google::protobuf::uint64 suid_;
  ::google::protobuf::uint32 uid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_pushGateWay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class JoinGroupResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpc.push.gateway.JoinGroupResponse) */ {
 public:
  JoinGroupResponse();
  virtual ~JoinGroupResponse();

  JoinGroupResponse(const JoinGroupResponse& from);

  inline JoinGroupResponse& operator=(const JoinGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  JoinGroupResponse(JoinGroupResponse&& from) noexcept
    : JoinGroupResponse() {
    *this = ::std::move(from);
  }

  inline JoinGroupResponse& operator=(JoinGroupResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinGroupResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JoinGroupResponse* internal_default_instance() {
    return reinterpret_cast<const JoinGroupResponse*>(
               &_JoinGroupResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(JoinGroupResponse* other);
  friend void swap(JoinGroupResponse& a, JoinGroupResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline JoinGroupResponse* New() const final {
    return CreateMaybeMessage<JoinGroupResponse>(NULL);
  }

  JoinGroupResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<JoinGroupResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const JoinGroupResponse& from);
  void MergeFrom(const JoinGroupResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(JoinGroupResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .grpc.push.gateway.UserGroup userGroupSet = 7;
  int usergroupset_size() const;
  void clear_usergroupset();
  static const int kUserGroupSetFieldNumber = 7;
  ::grpc::push::gateway::UserGroup* mutable_usergroupset(int index);
  ::google::protobuf::RepeatedPtrField< ::grpc::push::gateway::UserGroup >*
      mutable_usergroupset();
  const ::grpc::push::gateway::UserGroup& usergroupset(int index) const;
  ::grpc::push::gateway::UserGroup* add_usergroupset();
  const ::google::protobuf::RepeatedPtrField< ::grpc::push::gateway::UserGroup >&
      usergroupset() const;

  // bytes context = 4;
  void clear_context();
  static const int kContextFieldNumber = 4;
  const ::std::string& context() const;
  void set_context(const ::std::string& value);
  #if LANG_CXX11
  void set_context(::std::string&& value);
  #endif
  void set_context(const char* value);
  void set_context(const void* value, size_t size);
  ::std::string* mutable_context();
  ::std::string* release_context();
  void set_allocated_context(::std::string* context);

  // string errMsg = 12;
  void clear_errmsg();
  static const int kErrMsgFieldNumber = 12;
  const ::std::string& errmsg() const;
  void set_errmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_errmsg(::std::string&& value);
  #endif
  void set_errmsg(const char* value);
  void set_errmsg(const char* value, size_t size);
  ::std::string* mutable_errmsg();
  ::std::string* release_errmsg();
  void set_allocated_errmsg(::std::string* errmsg);

  // uint64 suid = 2;
  void clear_suid();
  static const int kSuidFieldNumber = 2;
  ::google::protobuf::uint64 suid() const;
  void set_suid(::google::protobuf::uint64 value);

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 resCode = 3;
  void clear_rescode();
  static const int kResCodeFieldNumber = 3;
  ::google::protobuf::uint32 rescode() const;
  void set_rescode(::google::protobuf::uint32 value);

  // uint64 pushgwIp = 5;
  void clear_pushgwip();
  static const int kPushgwIpFieldNumber = 5;
  ::google::protobuf::uint64 pushgwip() const;
  void set_pushgwip(::google::protobuf::uint64 value);

  // uint32 pushgwPort = 6;
  void clear_pushgwport();
  static const int kPushgwPortFieldNumber = 6;
  ::google::protobuf::uint32 pushgwport() const;
  void set_pushgwport(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:grpc.push.gateway.JoinGroupResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::grpc::push::gateway::UserGroup > usergroupset_;
  ::google::protobuf::internal::ArenaStringPtr context_;
  ::google::protobuf::internal::ArenaStringPtr errmsg_;
  ::google::protobuf::uint64 suid_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 rescode_;
  ::google::protobuf::uint64 pushgwip_;
  ::google::protobuf::uint32 pushgwport_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_pushGateWay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LeaveGroupRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpc.push.gateway.LeaveGroupRequest) */ {
 public:
  LeaveGroupRequest();
  virtual ~LeaveGroupRequest();

  LeaveGroupRequest(const LeaveGroupRequest& from);

  inline LeaveGroupRequest& operator=(const LeaveGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LeaveGroupRequest(LeaveGroupRequest&& from) noexcept
    : LeaveGroupRequest() {
    *this = ::std::move(from);
  }

  inline LeaveGroupRequest& operator=(LeaveGroupRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LeaveGroupRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LeaveGroupRequest* internal_default_instance() {
    return reinterpret_cast<const LeaveGroupRequest*>(
               &_LeaveGroupRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(LeaveGroupRequest* other);
  friend void swap(LeaveGroupRequest& a, LeaveGroupRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LeaveGroupRequest* New() const final {
    return CreateMaybeMessage<LeaveGroupRequest>(NULL);
  }

  LeaveGroupRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LeaveGroupRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LeaveGroupRequest& from);
  void MergeFrom(const LeaveGroupRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LeaveGroupRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .grpc.push.gateway.UserGroup userGroupSet = 4;
  int usergroupset_size() const;
  void clear_usergroupset();
  static const int kUserGroupSetFieldNumber = 4;
  ::grpc::push::gateway::UserGroup* mutable_usergroupset(int index);
  ::google::protobuf::RepeatedPtrField< ::grpc::push::gateway::UserGroup >*
      mutable_usergroupset();
  const ::grpc::push::gateway::UserGroup& usergroupset(int index) const;
  ::grpc::push::gateway::UserGroup* add_usergroupset();
  const ::google::protobuf::RepeatedPtrField< ::grpc::push::gateway::UserGroup >&
      usergroupset() const;

  // bytes context = 3;
  void clear_context();
  static const int kContextFieldNumber = 3;
  const ::std::string& context() const;
  void set_context(const ::std::string& value);
  #if LANG_CXX11
  void set_context(::std::string&& value);
  #endif
  void set_context(const char* value);
  void set_context(const void* value, size_t size);
  ::std::string* mutable_context();
  ::std::string* release_context();
  void set_allocated_context(::std::string* context);

  // uint64 suid = 2;
  void clear_suid();
  static const int kSuidFieldNumber = 2;
  ::google::protobuf::uint64 suid() const;
  void set_suid(::google::protobuf::uint64 value);

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:grpc.push.gateway.LeaveGroupRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::grpc::push::gateway::UserGroup > usergroupset_;
  ::google::protobuf::internal::ArenaStringPtr context_;
  ::google::protobuf::uint64 suid_;
  ::google::protobuf::uint32 uid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_pushGateWay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LeaveGroupResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpc.push.gateway.LeaveGroupResponse) */ {
 public:
  LeaveGroupResponse();
  virtual ~LeaveGroupResponse();

  LeaveGroupResponse(const LeaveGroupResponse& from);

  inline LeaveGroupResponse& operator=(const LeaveGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LeaveGroupResponse(LeaveGroupResponse&& from) noexcept
    : LeaveGroupResponse() {
    *this = ::std::move(from);
  }

  inline LeaveGroupResponse& operator=(LeaveGroupResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LeaveGroupResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LeaveGroupResponse* internal_default_instance() {
    return reinterpret_cast<const LeaveGroupResponse*>(
               &_LeaveGroupResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(LeaveGroupResponse* other);
  friend void swap(LeaveGroupResponse& a, LeaveGroupResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LeaveGroupResponse* New() const final {
    return CreateMaybeMessage<LeaveGroupResponse>(NULL);
  }

  LeaveGroupResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LeaveGroupResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LeaveGroupResponse& from);
  void MergeFrom(const LeaveGroupResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LeaveGroupResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .grpc.push.gateway.UserGroup userGroupSet = 7;
  int usergroupset_size() const;
  void clear_usergroupset();
  static const int kUserGroupSetFieldNumber = 7;
  ::grpc::push::gateway::UserGroup* mutable_usergroupset(int index);
  ::google::protobuf::RepeatedPtrField< ::grpc::push::gateway::UserGroup >*
      mutable_usergroupset();
  const ::grpc::push::gateway::UserGroup& usergroupset(int index) const;
  ::grpc::push::gateway::UserGroup* add_usergroupset();
  const ::google::protobuf::RepeatedPtrField< ::grpc::push::gateway::UserGroup >&
      usergroupset() const;

  // bytes context = 4;
  void clear_context();
  static const int kContextFieldNumber = 4;
  const ::std::string& context() const;
  void set_context(const ::std::string& value);
  #if LANG_CXX11
  void set_context(::std::string&& value);
  #endif
  void set_context(const char* value);
  void set_context(const void* value, size_t size);
  ::std::string* mutable_context();
  ::std::string* release_context();
  void set_allocated_context(::std::string* context);

  // string errMsg = 12;
  void clear_errmsg();
  static const int kErrMsgFieldNumber = 12;
  const ::std::string& errmsg() const;
  void set_errmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_errmsg(::std::string&& value);
  #endif
  void set_errmsg(const char* value);
  void set_errmsg(const char* value, size_t size);
  ::std::string* mutable_errmsg();
  ::std::string* release_errmsg();
  void set_allocated_errmsg(::std::string* errmsg);

  // uint64 suid = 2;
  void clear_suid();
  static const int kSuidFieldNumber = 2;
  ::google::protobuf::uint64 suid() const;
  void set_suid(::google::protobuf::uint64 value);

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 resCode = 3;
  void clear_rescode();
  static const int kResCodeFieldNumber = 3;
  ::google::protobuf::uint32 rescode() const;
  void set_rescode(::google::protobuf::uint32 value);

  // uint64 pushgwIp = 5;
  void clear_pushgwip();
  static const int kPushgwIpFieldNumber = 5;
  ::google::protobuf::uint64 pushgwip() const;
  void set_pushgwip(::google::protobuf::uint64 value);

  // uint32 pushgwPort = 6;
  void clear_pushgwport();
  static const int kPushgwPortFieldNumber = 6;
  ::google::protobuf::uint32 pushgwport() const;
  void set_pushgwport(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:grpc.push.gateway.LeaveGroupResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::grpc::push::gateway::UserGroup > usergroupset_;
  ::google::protobuf::internal::ArenaStringPtr context_;
  ::google::protobuf::internal::ArenaStringPtr errmsg_;
  ::google::protobuf::uint64 suid_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 rescode_;
  ::google::protobuf::uint64 pushgwip_;
  ::google::protobuf::uint32 pushgwport_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_pushGateWay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PingRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpc.push.gateway.PingRequest) */ {
 public:
  PingRequest();
  virtual ~PingRequest();

  PingRequest(const PingRequest& from);

  inline PingRequest& operator=(const PingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PingRequest(PingRequest&& from) noexcept
    : PingRequest() {
    *this = ::std::move(from);
  }

  inline PingRequest& operator=(PingRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PingRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PingRequest* internal_default_instance() {
    return reinterpret_cast<const PingRequest*>(
               &_PingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(PingRequest* other);
  friend void swap(PingRequest& a, PingRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PingRequest* New() const final {
    return CreateMaybeMessage<PingRequest>(NULL);
  }

  PingRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PingRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PingRequest& from);
  void MergeFrom(const PingRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PingRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes context = 3;
  void clear_context();
  static const int kContextFieldNumber = 3;
  const ::std::string& context() const;
  void set_context(const ::std::string& value);
  #if LANG_CXX11
  void set_context(::std::string&& value);
  #endif
  void set_context(const char* value);
  void set_context(const void* value, size_t size);
  ::std::string* mutable_context();
  ::std::string* release_context();
  void set_allocated_context(::std::string* context);

  // uint64 suid = 2;
  void clear_suid();
  static const int kSuidFieldNumber = 2;
  ::google::protobuf::uint64 suid() const;
  void set_suid(::google::protobuf::uint64 value);

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:grpc.push.gateway.PingRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr context_;
  ::google::protobuf::uint64 suid_;
  ::google::protobuf::uint32 uid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_pushGateWay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PongResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpc.push.gateway.PongResponse) */ {
 public:
  PongResponse();
  virtual ~PongResponse();

  PongResponse(const PongResponse& from);

  inline PongResponse& operator=(const PongResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PongResponse(PongResponse&& from) noexcept
    : PongResponse() {
    *this = ::std::move(from);
  }

  inline PongResponse& operator=(PongResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PongResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PongResponse* internal_default_instance() {
    return reinterpret_cast<const PongResponse*>(
               &_PongResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(PongResponse* other);
  friend void swap(PongResponse& a, PongResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PongResponse* New() const final {
    return CreateMaybeMessage<PongResponse>(NULL);
  }

  PongResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PongResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PongResponse& from);
  void MergeFrom(const PongResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PongResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes context = 3;
  void clear_context();
  static const int kContextFieldNumber = 3;
  const ::std::string& context() const;
  void set_context(const ::std::string& value);
  #if LANG_CXX11
  void set_context(::std::string&& value);
  #endif
  void set_context(const char* value);
  void set_context(const void* value, size_t size);
  ::std::string* mutable_context();
  ::std::string* release_context();
  void set_allocated_context(::std::string* context);

  // uint64 suid = 2;
  void clear_suid();
  static const int kSuidFieldNumber = 2;
  ::google::protobuf::uint64 suid() const;
  void set_suid(::google::protobuf::uint64 value);

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 pushgwPort = 6;
  void clear_pushgwport();
  static const int kPushgwPortFieldNumber = 6;
  ::google::protobuf::uint32 pushgwport() const;
  void set_pushgwport(::google::protobuf::uint32 value);

  // uint64 pushgwIp = 5;
  void clear_pushgwip();
  static const int kPushgwIpFieldNumber = 5;
  ::google::protobuf::uint64 pushgwip() const;
  void set_pushgwip(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:grpc.push.gateway.PongResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr context_;
  ::google::protobuf::uint64 suid_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 pushgwport_;
  ::google::protobuf::uint64 pushgwip_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_pushGateWay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PushRegReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpc.push.gateway.PushRegReq) */ {
 public:
  PushRegReq();
  virtual ~PushRegReq();

  PushRegReq(const PushRegReq& from);

  inline PushRegReq& operator=(const PushRegReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PushRegReq(PushRegReq&& from) noexcept
    : PushRegReq() {
    *this = ::std::move(from);
  }

  inline PushRegReq& operator=(PushRegReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PushRegReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PushRegReq* internal_default_instance() {
    return reinterpret_cast<const PushRegReq*>(
               &_PushRegReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(PushRegReq* other);
  friend void swap(PushRegReq& a, PushRegReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PushRegReq* New() const final {
    return CreateMaybeMessage<PushRegReq>(NULL);
  }

  PushRegReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PushRegReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PushRegReq& from);
  void MergeFrom(const PushRegReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PushRegReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes msgData = 2;
  void clear_msgdata();
  static const int kMsgDataFieldNumber = 2;
  const ::std::string& msgdata() const;
  void set_msgdata(const ::std::string& value);
  #if LANG_CXX11
  void set_msgdata(::std::string&& value);
  #endif
  void set_msgdata(const char* value);
  void set_msgdata(const void* value, size_t size);
  ::std::string* mutable_msgdata();
  ::std::string* release_msgdata();
  void set_allocated_msgdata(::std::string* msgdata);

  // .grpc.push.gateway.StreamURI uri = 1;
  void clear_uri();
  static const int kUriFieldNumber = 1;
  ::grpc::push::gateway::StreamURI uri() const;
  void set_uri(::grpc::push::gateway::StreamURI value);

  // @@protoc_insertion_point(class_scope:grpc.push.gateway.PushRegReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msgdata_;
  int uri_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_pushGateWay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PushData_Key2ExstrEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<PushData_Key2ExstrEntry_DoNotUse, 
    ::google::protobuf::uint32, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<PushData_Key2ExstrEntry_DoNotUse, 
    ::google::protobuf::uint32, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  PushData_Key2ExstrEntry_DoNotUse();
  PushData_Key2ExstrEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const PushData_Key2ExstrEntry_DoNotUse& other);
  static const PushData_Key2ExstrEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const PushData_Key2ExstrEntry_DoNotUse*>(&_PushData_Key2ExstrEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class PushData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpc.push.gateway.PushData) */ {
 public:
  PushData();
  virtual ~PushData();

  PushData(const PushData& from);

  inline PushData& operator=(const PushData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PushData(PushData&& from) noexcept
    : PushData() {
    *this = ::std::move(from);
  }

  inline PushData& operator=(PushData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PushData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PushData* internal_default_instance() {
    return reinterpret_cast<const PushData*>(
               &_PushData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(PushData* other);
  friend void swap(PushData& a, PushData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PushData* New() const final {
    return CreateMaybeMessage<PushData>(NULL);
  }

  PushData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PushData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PushData& from);
  void MergeFrom(const PushData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PushData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, string> key2Exstr = 10;
  int key2exstr_size() const;
  void clear_key2exstr();
  static const int kKey2ExstrFieldNumber = 10;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >&
      key2exstr() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >*
      mutable_key2exstr();

  // string serviceName = 5;
  void clear_servicename();
  static const int kServiceNameFieldNumber = 5;
  const ::std::string& servicename() const;
  void set_servicename(const ::std::string& value);
  #if LANG_CXX11
  void set_servicename(::std::string&& value);
  #endif
  void set_servicename(const char* value);
  void set_servicename(const char* value, size_t size);
  ::std::string* mutable_servicename();
  ::std::string* release_servicename();
  void set_allocated_servicename(::std::string* servicename);

  // bytes msgData = 7;
  void clear_msgdata();
  static const int kMsgDataFieldNumber = 7;
  const ::std::string& msgdata() const;
  void set_msgdata(const ::std::string& value);
  #if LANG_CXX11
  void set_msgdata(::std::string&& value);
  #endif
  void set_msgdata(const char* value);
  void set_msgdata(const void* value, size_t size);
  ::std::string* mutable_msgdata();
  ::std::string* release_msgdata();
  void set_allocated_msgdata(::std::string* msgdata);

  // string serverId = 9;
  void clear_serverid();
  static const int kServerIdFieldNumber = 9;
  const ::std::string& serverid() const;
  void set_serverid(const ::std::string& value);
  #if LANG_CXX11
  void set_serverid(::std::string&& value);
  #endif
  void set_serverid(const char* value);
  void set_serverid(const char* value, size_t size);
  ::std::string* mutable_serverid();
  ::std::string* release_serverid();
  void set_allocated_serverid(::std::string* serverid);

  // uint64 suid = 1;
  void clear_suid();
  static const int kSuidFieldNumber = 1;
  ::google::protobuf::uint64 suid() const;
  void set_suid(::google::protobuf::uint64 value);

  // uint64 GroupType = 3;
  void clear_grouptype();
  static const int kGroupTypeFieldNumber = 3;
  ::google::protobuf::uint64 grouptype() const;
  void set_grouptype(::google::protobuf::uint64 value);

  // uint64 GroupId = 4;
  void clear_groupid();
  static const int kGroupIdFieldNumber = 4;
  ::google::protobuf::uint64 groupid() const;
  void set_groupid(::google::protobuf::uint64 value);

  // uint32 uid = 2;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // .grpc.push.gateway.StreamURI uri = 6;
  void clear_uri();
  static const int kUriFieldNumber = 6;
  ::grpc::push::gateway::StreamURI uri() const;
  void set_uri(::grpc::push::gateway::StreamURI value);

  // uint64 seqNum = 8;
  void clear_seqnum();
  static const int kSeqNumFieldNumber = 8;
  ::google::protobuf::uint64 seqnum() const;
  void set_seqnum(::google::protobuf::uint64 value);

  // uint32 originalURI = 11;
  void clear_originaluri();
  static const int kOriginalURIFieldNumber = 11;
  ::google::protobuf::uint32 originaluri() const;
  void set_originaluri(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:grpc.push.gateway.PushData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      PushData_Key2ExstrEntry_DoNotUse,
      ::google::protobuf::uint32, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > key2exstr_;
  ::google::protobuf::internal::ArenaStringPtr servicename_;
  ::google::protobuf::internal::ArenaStringPtr msgdata_;
  ::google::protobuf::internal::ArenaStringPtr serverid_;
  ::google::protobuf::uint64 suid_;
  ::google::protobuf::uint64 grouptype_;
  ::google::protobuf::uint64 groupid_;
  ::google::protobuf::uint32 uid_;
  int uri_;
  ::google::protobuf::uint64 seqnum_;
  ::google::protobuf::uint32 originaluri_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_pushGateWay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PushToClientReq_Key2ExstrEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<PushToClientReq_Key2ExstrEntry_DoNotUse, 
    ::google::protobuf::uint32, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<PushToClientReq_Key2ExstrEntry_DoNotUse, 
    ::google::protobuf::uint32, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  PushToClientReq_Key2ExstrEntry_DoNotUse();
  PushToClientReq_Key2ExstrEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const PushToClientReq_Key2ExstrEntry_DoNotUse& other);
  static const PushToClientReq_Key2ExstrEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const PushToClientReq_Key2ExstrEntry_DoNotUse*>(&_PushToClientReq_Key2ExstrEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class PushToClientReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpc.push.gateway.PushToClientReq) */ {
 public:
  PushToClientReq();
  virtual ~PushToClientReq();

  PushToClientReq(const PushToClientReq& from);

  inline PushToClientReq& operator=(const PushToClientReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PushToClientReq(PushToClientReq&& from) noexcept
    : PushToClientReq() {
    *this = ::std::move(from);
  }

  inline PushToClientReq& operator=(PushToClientReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PushToClientReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PushToClientReq* internal_default_instance() {
    return reinterpret_cast<const PushToClientReq*>(
               &_PushToClientReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(PushToClientReq* other);
  friend void swap(PushToClientReq& a, PushToClientReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PushToClientReq* New() const final {
    return CreateMaybeMessage<PushToClientReq>(NULL);
  }

  PushToClientReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PushToClientReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PushToClientReq& from);
  void MergeFrom(const PushToClientReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PushToClientReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, string> key2Exstr = 10;
  int key2exstr_size() const;
  void clear_key2exstr();
  static const int kKey2ExstrFieldNumber = 10;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >&
      key2exstr() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >*
      mutable_key2exstr();

  // bytes context = 1;
  void clear_context();
  static const int kContextFieldNumber = 1;
  const ::std::string& context() const;
  void set_context(const ::std::string& value);
  #if LANG_CXX11
  void set_context(::std::string&& value);
  #endif
  void set_context(const char* value);
  void set_context(const void* value, size_t size);
  ::std::string* mutable_context();
  ::std::string* release_context();
  void set_allocated_context(::std::string* context);

  // string fromSrvId = 2;
  void clear_fromsrvid();
  static const int kFromSrvIdFieldNumber = 2;
  const ::std::string& fromsrvid() const;
  void set_fromsrvid(const ::std::string& value);
  #if LANG_CXX11
  void set_fromsrvid(::std::string&& value);
  #endif
  void set_fromsrvid(const char* value);
  void set_fromsrvid(const char* value, size_t size);
  ::std::string* mutable_fromsrvid();
  ::std::string* release_fromsrvid();
  void set_allocated_fromsrvid(::std::string* fromsrvid);

  // string serviceName = 3;
  void clear_servicename();
  static const int kServiceNameFieldNumber = 3;
  const ::std::string& servicename() const;
  void set_servicename(const ::std::string& value);
  #if LANG_CXX11
  void set_servicename(::std::string&& value);
  #endif
  void set_servicename(const char* value);
  void set_servicename(const char* value, size_t size);
  ::std::string* mutable_servicename();
  ::std::string* release_servicename();
  void set_allocated_servicename(::std::string* servicename);

  // bytes data = 9;
  void clear_data();
  static const int kDataFieldNumber = 9;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // uint64 suid = 4;
  void clear_suid();
  static const int kSuidFieldNumber = 4;
  ::google::protobuf::uint64 suid() const;
  void set_suid(::google::protobuf::uint64 value);

  // uint32 uid = 5;
  void clear_uid();
  static const int kUidFieldNumber = 5;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 fromUid = 6;
  void clear_fromuid();
  static const int kFromUidFieldNumber = 6;
  ::google::protobuf::uint32 fromuid() const;
  void set_fromuid(::google::protobuf::uint32 value);

  // uint64 seqid = 11;
  void clear_seqid();
  static const int kSeqidFieldNumber = 11;
  ::google::protobuf::uint64 seqid() const;
  void set_seqid(::google::protobuf::uint64 value);

  // uint32 originalURI = 12;
  void clear_originaluri();
  static const int kOriginalURIFieldNumber = 12;
  ::google::protobuf::uint32 originaluri() const;
  void set_originaluri(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:grpc.push.gateway.PushToClientReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      PushToClientReq_Key2ExstrEntry_DoNotUse,
      ::google::protobuf::uint32, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > key2exstr_;
  ::google::protobuf::internal::ArenaStringPtr context_;
  ::google::protobuf::internal::ArenaStringPtr fromsrvid_;
  ::google::protobuf::internal::ArenaStringPtr servicename_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::uint64 suid_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 fromuid_;
  ::google::protobuf::uint64 seqid_;
  ::google::protobuf::uint32 originaluri_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_pushGateWay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PushToClientResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpc.push.gateway.PushToClientResp) */ {
 public:
  PushToClientResp();
  virtual ~PushToClientResp();

  PushToClientResp(const PushToClientResp& from);

  inline PushToClientResp& operator=(const PushToClientResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PushToClientResp(PushToClientResp&& from) noexcept
    : PushToClientResp() {
    *this = ::std::move(from);
  }

  inline PushToClientResp& operator=(PushToClientResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PushToClientResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PushToClientResp* internal_default_instance() {
    return reinterpret_cast<const PushToClientResp*>(
               &_PushToClientResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(PushToClientResp* other);
  friend void swap(PushToClientResp& a, PushToClientResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PushToClientResp* New() const final {
    return CreateMaybeMessage<PushToClientResp>(NULL);
  }

  PushToClientResp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PushToClientResp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PushToClientResp& from);
  void MergeFrom(const PushToClientResp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PushToClientResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes context = 2;
  void clear_context();
  static const int kContextFieldNumber = 2;
  const ::std::string& context() const;
  void set_context(const ::std::string& value);
  #if LANG_CXX11
  void set_context(::std::string&& value);
  #endif
  void set_context(const char* value);
  void set_context(const void* value, size_t size);
  ::std::string* mutable_context();
  ::std::string* release_context();
  void set_allocated_context(::std::string* context);

  // uint64 seqid = 3;
  void clear_seqid();
  static const int kSeqidFieldNumber = 3;
  ::google::protobuf::uint64 seqid() const;
  void set_seqid(::google::protobuf::uint64 value);

  // uint32 resCode = 1;
  void clear_rescode();
  static const int kResCodeFieldNumber = 1;
  ::google::protobuf::uint32 rescode() const;
  void set_rescode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:grpc.push.gateway.PushToClientResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr context_;
  ::google::protobuf::uint64 seqid_;
  ::google::protobuf::uint32 rescode_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_pushGateWay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PushToGroupReq_Key2ExstrEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<PushToGroupReq_Key2ExstrEntry_DoNotUse, 
    ::google::protobuf::uint32, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<PushToGroupReq_Key2ExstrEntry_DoNotUse, 
    ::google::protobuf::uint32, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  PushToGroupReq_Key2ExstrEntry_DoNotUse();
  PushToGroupReq_Key2ExstrEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const PushToGroupReq_Key2ExstrEntry_DoNotUse& other);
  static const PushToGroupReq_Key2ExstrEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const PushToGroupReq_Key2ExstrEntry_DoNotUse*>(&_PushToGroupReq_Key2ExstrEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class PushToGroupReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpc.push.gateway.PushToGroupReq) */ {
 public:
  PushToGroupReq();
  virtual ~PushToGroupReq();

  PushToGroupReq(const PushToGroupReq& from);

  inline PushToGroupReq& operator=(const PushToGroupReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PushToGroupReq(PushToGroupReq&& from) noexcept
    : PushToGroupReq() {
    *this = ::std::move(from);
  }

  inline PushToGroupReq& operator=(PushToGroupReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PushToGroupReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PushToGroupReq* internal_default_instance() {
    return reinterpret_cast<const PushToGroupReq*>(
               &_PushToGroupReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(PushToGroupReq* other);
  friend void swap(PushToGroupReq& a, PushToGroupReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PushToGroupReq* New() const final {
    return CreateMaybeMessage<PushToGroupReq>(NULL);
  }

  PushToGroupReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PushToGroupReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PushToGroupReq& from);
  void MergeFrom(const PushToGroupReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PushToGroupReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, string> key2Exstr = 10;
  int key2exstr_size() const;
  void clear_key2exstr();
  static const int kKey2ExstrFieldNumber = 10;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >&
      key2exstr() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >*
      mutable_key2exstr();

  // bytes context = 1;
  void clear_context();
  static const int kContextFieldNumber = 1;
  const ::std::string& context() const;
  void set_context(const ::std::string& value);
  #if LANG_CXX11
  void set_context(::std::string&& value);
  #endif
  void set_context(const char* value);
  void set_context(const void* value, size_t size);
  ::std::string* mutable_context();
  ::std::string* release_context();
  void set_allocated_context(::std::string* context);

  // string fromSrvId = 2;
  void clear_fromsrvid();
  static const int kFromSrvIdFieldNumber = 2;
  const ::std::string& fromsrvid() const;
  void set_fromsrvid(const ::std::string& value);
  #if LANG_CXX11
  void set_fromsrvid(::std::string&& value);
  #endif
  void set_fromsrvid(const char* value);
  void set_fromsrvid(const char* value, size_t size);
  ::std::string* mutable_fromsrvid();
  ::std::string* release_fromsrvid();
  void set_allocated_fromsrvid(::std::string* fromsrvid);

  // string serviceName = 3;
  void clear_servicename();
  static const int kServiceNameFieldNumber = 3;
  const ::std::string& servicename() const;
  void set_servicename(const ::std::string& value);
  #if LANG_CXX11
  void set_servicename(::std::string&& value);
  #endif
  void set_servicename(const char* value);
  void set_servicename(const char* value, size_t size);
  ::std::string* mutable_servicename();
  ::std::string* release_servicename();
  void set_allocated_servicename(::std::string* servicename);

  // bytes data = 9;
  void clear_data();
  static const int kDataFieldNumber = 9;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // uint64 GroupType = 7;
  void clear_grouptype();
  static const int kGroupTypeFieldNumber = 7;
  ::google::protobuf::uint64 grouptype() const;
  void set_grouptype(::google::protobuf::uint64 value);

  // uint64 GroupId = 8;
  void clear_groupid();
  static const int kGroupIdFieldNumber = 8;
  ::google::protobuf::uint64 groupid() const;
  void set_groupid(::google::protobuf::uint64 value);

  // uint32 fromUid = 6;
  void clear_fromuid();
  static const int kFromUidFieldNumber = 6;
  ::google::protobuf::uint32 fromuid() const;
  void set_fromuid(::google::protobuf::uint32 value);

  // uint32 originalURI = 12;
  void clear_originaluri();
  static const int kOriginalURIFieldNumber = 12;
  ::google::protobuf::uint32 originaluri() const;
  void set_originaluri(::google::protobuf::uint32 value);

  // uint64 seqid = 11;
  void clear_seqid();
  static const int kSeqidFieldNumber = 11;
  ::google::protobuf::uint64 seqid() const;
  void set_seqid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:grpc.push.gateway.PushToGroupReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      PushToGroupReq_Key2ExstrEntry_DoNotUse,
      ::google::protobuf::uint32, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > key2exstr_;
  ::google::protobuf::internal::ArenaStringPtr context_;
  ::google::protobuf::internal::ArenaStringPtr fromsrvid_;
  ::google::protobuf::internal::ArenaStringPtr servicename_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::uint64 grouptype_;
  ::google::protobuf::uint64 groupid_;
  ::google::protobuf::uint32 fromuid_;
  ::google::protobuf::uint32 originaluri_;
  ::google::protobuf::uint64 seqid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_pushGateWay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PushToGroupResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpc.push.gateway.PushToGroupResp) */ {
 public:
  PushToGroupResp();
  virtual ~PushToGroupResp();

  PushToGroupResp(const PushToGroupResp& from);

  inline PushToGroupResp& operator=(const PushToGroupResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PushToGroupResp(PushToGroupResp&& from) noexcept
    : PushToGroupResp() {
    *this = ::std::move(from);
  }

  inline PushToGroupResp& operator=(PushToGroupResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PushToGroupResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PushToGroupResp* internal_default_instance() {
    return reinterpret_cast<const PushToGroupResp*>(
               &_PushToGroupResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(PushToGroupResp* other);
  friend void swap(PushToGroupResp& a, PushToGroupResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PushToGroupResp* New() const final {
    return CreateMaybeMessage<PushToGroupResp>(NULL);
  }

  PushToGroupResp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PushToGroupResp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PushToGroupResp& from);
  void MergeFrom(const PushToGroupResp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PushToGroupResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes context = 2;
  void clear_context();
  static const int kContextFieldNumber = 2;
  const ::std::string& context() const;
  void set_context(const ::std::string& value);
  #if LANG_CXX11
  void set_context(::std::string&& value);
  #endif
  void set_context(const char* value);
  void set_context(const void* value, size_t size);
  ::std::string* mutable_context();
  ::std::string* release_context();
  void set_allocated_context(::std::string* context);

  // uint64 seqid = 3;
  void clear_seqid();
  static const int kSeqidFieldNumber = 3;
  ::google::protobuf::uint64 seqid() const;
  void set_seqid(::google::protobuf::uint64 value);

  // uint32 resCode = 1;
  void clear_rescode();
  static const int kResCodeFieldNumber = 1;
  ::google::protobuf::uint32 rescode() const;
  void set_rescode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:grpc.push.gateway.PushToGroupResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr context_;
  ::google::protobuf::uint64 seqid_;
  ::google::protobuf::uint32 rescode_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_pushGateWay_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UserGroup

// uint64 userGroupType = 1;
inline void UserGroup::clear_usergrouptype() {
  usergrouptype_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UserGroup::usergrouptype() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.UserGroup.userGroupType)
  return usergrouptype_;
}
inline void UserGroup::set_usergrouptype(::google::protobuf::uint64 value) {
  
  usergrouptype_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.UserGroup.userGroupType)
}

// uint64 userGroupId = 2;
inline void UserGroup::clear_usergroupid() {
  usergroupid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UserGroup::usergroupid() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.UserGroup.userGroupId)
  return usergroupid_;
}
inline void UserGroup::set_usergroupid(::google::protobuf::uint64 value) {
  
  usergroupid_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.UserGroup.userGroupId)
}

// -------------------------------------------------------------------

// LoginRequest

// string appid = 1;
inline void LoginRequest::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRequest::appid() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.LoginRequest.appid)
  return appid_.GetNoArena();
}
inline void LoginRequest::set_appid(const ::std::string& value) {
  
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.push.gateway.LoginRequest.appid)
}
#if LANG_CXX11
inline void LoginRequest::set_appid(::std::string&& value) {
  
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.push.gateway.LoginRequest.appid)
}
#endif
inline void LoginRequest::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.push.gateway.LoginRequest.appid)
}
inline void LoginRequest::set_appid(const char* value, size_t size) {
  
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.push.gateway.LoginRequest.appid)
}
inline ::std::string* LoginRequest::mutable_appid() {
  
  // @@protoc_insertion_point(field_mutable:grpc.push.gateway.LoginRequest.appid)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_appid() {
  // @@protoc_insertion_point(field_release:grpc.push.gateway.LoginRequest.appid)
  
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    
  } else {
    
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:grpc.push.gateway.LoginRequest.appid)
}

// uint32 uid = 2;
inline void LoginRequest::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 LoginRequest::uid() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.LoginRequest.uid)
  return uid_;
}
inline void LoginRequest::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.LoginRequest.uid)
}

// uint64 suid = 3;
inline void LoginRequest::clear_suid() {
  suid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LoginRequest::suid() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.LoginRequest.suid)
  return suid_;
}
inline void LoginRequest::set_suid(::google::protobuf::uint64 value) {
  
  suid_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.LoginRequest.suid)
}

// bool reLogin = 4;
inline void LoginRequest::clear_relogin() {
  relogin_ = false;
}
inline bool LoginRequest::relogin() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.LoginRequest.reLogin)
  return relogin_;
}
inline void LoginRequest::set_relogin(bool value) {
  
  relogin_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.LoginRequest.reLogin)
}

// bytes ticket = 5;
inline void LoginRequest::clear_ticket() {
  ticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRequest::ticket() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.LoginRequest.ticket)
  return ticket_.GetNoArena();
}
inline void LoginRequest::set_ticket(const ::std::string& value) {
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.push.gateway.LoginRequest.ticket)
}
#if LANG_CXX11
inline void LoginRequest::set_ticket(::std::string&& value) {
  
  ticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.push.gateway.LoginRequest.ticket)
}
#endif
inline void LoginRequest::set_ticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.push.gateway.LoginRequest.ticket)
}
inline void LoginRequest::set_ticket(const void* value, size_t size) {
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.push.gateway.LoginRequest.ticket)
}
inline ::std::string* LoginRequest::mutable_ticket() {
  
  // @@protoc_insertion_point(field_mutable:grpc.push.gateway.LoginRequest.ticket)
  return ticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_ticket() {
  // @@protoc_insertion_point(field_release:grpc.push.gateway.LoginRequest.ticket)
  
  return ticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_ticket(::std::string* ticket) {
  if (ticket != NULL) {
    
  } else {
    
  }
  ticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ticket);
  // @@protoc_insertion_point(field_set_allocated:grpc.push.gateway.LoginRequest.ticket)
}

// bytes cookie = 6;
inline void LoginRequest::clear_cookie() {
  cookie_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRequest::cookie() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.LoginRequest.cookie)
  return cookie_.GetNoArena();
}
inline void LoginRequest::set_cookie(const ::std::string& value) {
  
  cookie_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.push.gateway.LoginRequest.cookie)
}
#if LANG_CXX11
inline void LoginRequest::set_cookie(::std::string&& value) {
  
  cookie_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.push.gateway.LoginRequest.cookie)
}
#endif
inline void LoginRequest::set_cookie(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cookie_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.push.gateway.LoginRequest.cookie)
}
inline void LoginRequest::set_cookie(const void* value, size_t size) {
  
  cookie_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.push.gateway.LoginRequest.cookie)
}
inline ::std::string* LoginRequest::mutable_cookie() {
  
  // @@protoc_insertion_point(field_mutable:grpc.push.gateway.LoginRequest.cookie)
  return cookie_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_cookie() {
  // @@protoc_insertion_point(field_release:grpc.push.gateway.LoginRequest.cookie)
  
  return cookie_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_cookie(::std::string* cookie) {
  if (cookie != NULL) {
    
  } else {
    
  }
  cookie_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cookie);
  // @@protoc_insertion_point(field_set_allocated:grpc.push.gateway.LoginRequest.cookie)
}

// bytes context = 7;
inline void LoginRequest::clear_context() {
  context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRequest::context() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.LoginRequest.context)
  return context_.GetNoArena();
}
inline void LoginRequest::set_context(const ::std::string& value) {
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.push.gateway.LoginRequest.context)
}
#if LANG_CXX11
inline void LoginRequest::set_context(::std::string&& value) {
  
  context_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.push.gateway.LoginRequest.context)
}
#endif
inline void LoginRequest::set_context(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.push.gateway.LoginRequest.context)
}
inline void LoginRequest::set_context(const void* value, size_t size) {
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.push.gateway.LoginRequest.context)
}
inline ::std::string* LoginRequest::mutable_context() {
  
  // @@protoc_insertion_point(field_mutable:grpc.push.gateway.LoginRequest.context)
  return context_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_context() {
  // @@protoc_insertion_point(field_release:grpc.push.gateway.LoginRequest.context)
  
  return context_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_context(::std::string* context) {
  if (context != NULL) {
    
  } else {
    
  }
  context_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), context);
  // @@protoc_insertion_point(field_set_allocated:grpc.push.gateway.LoginRequest.context)
}

// string account = 8;
inline void LoginRequest::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRequest::account() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.LoginRequest.account)
  return account_.GetNoArena();
}
inline void LoginRequest::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.push.gateway.LoginRequest.account)
}
#if LANG_CXX11
inline void LoginRequest::set_account(::std::string&& value) {
  
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.push.gateway.LoginRequest.account)
}
#endif
inline void LoginRequest::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.push.gateway.LoginRequest.account)
}
inline void LoginRequest::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.push.gateway.LoginRequest.account)
}
inline ::std::string* LoginRequest::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:grpc.push.gateway.LoginRequest.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_account() {
  // @@protoc_insertion_point(field_release:grpc.push.gateway.LoginRequest.account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:grpc.push.gateway.LoginRequest.account)
}

// string password = 9;
inline void LoginRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRequest::password() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.LoginRequest.password)
  return password_.GetNoArena();
}
inline void LoginRequest::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.push.gateway.LoginRequest.password)
}
#if LANG_CXX11
inline void LoginRequest::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.push.gateway.LoginRequest.password)
}
#endif
inline void LoginRequest::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.push.gateway.LoginRequest.password)
}
inline void LoginRequest::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.push.gateway.LoginRequest.password)
}
inline ::std::string* LoginRequest::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:grpc.push.gateway.LoginRequest.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_password() {
  // @@protoc_insertion_point(field_release:grpc.push.gateway.LoginRequest.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:grpc.push.gateway.LoginRequest.password)
}

// uint64 appKey = 10;
inline void LoginRequest::clear_appkey() {
  appkey_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LoginRequest::appkey() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.LoginRequest.appKey)
  return appkey_;
}
inline void LoginRequest::set_appkey(::google::protobuf::uint64 value) {
  
  appkey_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.LoginRequest.appKey)
}

// .grpc.push.gateway.UserTerminalType termnialType = 11;
inline void LoginRequest::clear_termnialtype() {
  termnialtype_ = 0;
}
inline ::grpc::push::gateway::UserTerminalType LoginRequest::termnialtype() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.LoginRequest.termnialType)
  return static_cast< ::grpc::push::gateway::UserTerminalType >(termnialtype_);
}
inline void LoginRequest::set_termnialtype(::grpc::push::gateway::UserTerminalType value) {
  
  termnialtype_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.LoginRequest.termnialType)
}

// -------------------------------------------------------------------

// LoginResponse

// uint32 resCode = 1;
inline void LoginResponse::clear_rescode() {
  rescode_ = 0u;
}
inline ::google::protobuf::uint32 LoginResponse::rescode() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.LoginResponse.resCode)
  return rescode_;
}
inline void LoginResponse::set_rescode(::google::protobuf::uint32 value) {
  
  rescode_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.LoginResponse.resCode)
}

// uint32 uid = 2;
inline void LoginResponse::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 LoginResponse::uid() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.LoginResponse.uid)
  return uid_;
}
inline void LoginResponse::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.LoginResponse.uid)
}

// uint64 suid = 3;
inline void LoginResponse::clear_suid() {
  suid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LoginResponse::suid() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.LoginResponse.suid)
  return suid_;
}
inline void LoginResponse::set_suid(::google::protobuf::uint64 value) {
  
  suid_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.LoginResponse.suid)
}

// bytes context = 4;
inline void LoginResponse::clear_context() {
  context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginResponse::context() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.LoginResponse.context)
  return context_.GetNoArena();
}
inline void LoginResponse::set_context(const ::std::string& value) {
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.push.gateway.LoginResponse.context)
}
#if LANG_CXX11
inline void LoginResponse::set_context(::std::string&& value) {
  
  context_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.push.gateway.LoginResponse.context)
}
#endif
inline void LoginResponse::set_context(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.push.gateway.LoginResponse.context)
}
inline void LoginResponse::set_context(const void* value, size_t size) {
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.push.gateway.LoginResponse.context)
}
inline ::std::string* LoginResponse::mutable_context() {
  
  // @@protoc_insertion_point(field_mutable:grpc.push.gateway.LoginResponse.context)
  return context_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginResponse::release_context() {
  // @@protoc_insertion_point(field_release:grpc.push.gateway.LoginResponse.context)
  
  return context_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginResponse::set_allocated_context(::std::string* context) {
  if (context != NULL) {
    
  } else {
    
  }
  context_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), context);
  // @@protoc_insertion_point(field_set_allocated:grpc.push.gateway.LoginResponse.context)
}

// uint64 pushgwIp = 5;
inline void LoginResponse::clear_pushgwip() {
  pushgwip_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LoginResponse::pushgwip() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.LoginResponse.pushgwIp)
  return pushgwip_;
}
inline void LoginResponse::set_pushgwip(::google::protobuf::uint64 value) {
  
  pushgwip_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.LoginResponse.pushgwIp)
}

// uint32 pushgwPort = 6;
inline void LoginResponse::clear_pushgwport() {
  pushgwport_ = 0u;
}
inline ::google::protobuf::uint32 LoginResponse::pushgwport() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.LoginResponse.pushgwPort)
  return pushgwport_;
}
inline void LoginResponse::set_pushgwport(::google::protobuf::uint32 value) {
  
  pushgwport_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.LoginResponse.pushgwPort)
}

// string errMsg = 12;
inline void LoginResponse::clear_errmsg() {
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginResponse::errmsg() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.LoginResponse.errMsg)
  return errmsg_.GetNoArena();
}
inline void LoginResponse::set_errmsg(const ::std::string& value) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.push.gateway.LoginResponse.errMsg)
}
#if LANG_CXX11
inline void LoginResponse::set_errmsg(::std::string&& value) {
  
  errmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.push.gateway.LoginResponse.errMsg)
}
#endif
inline void LoginResponse::set_errmsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.push.gateway.LoginResponse.errMsg)
}
inline void LoginResponse::set_errmsg(const char* value, size_t size) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.push.gateway.LoginResponse.errMsg)
}
inline ::std::string* LoginResponse::mutable_errmsg() {
  
  // @@protoc_insertion_point(field_mutable:grpc.push.gateway.LoginResponse.errMsg)
  return errmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginResponse::release_errmsg() {
  // @@protoc_insertion_point(field_release:grpc.push.gateway.LoginResponse.errMsg)
  
  return errmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginResponse::set_allocated_errmsg(::std::string* errmsg) {
  if (errmsg != NULL) {
    
  } else {
    
  }
  errmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errmsg);
  // @@protoc_insertion_point(field_set_allocated:grpc.push.gateway.LoginResponse.errMsg)
}

// -------------------------------------------------------------------

// LogoutRequest

// string appid = 1;
inline void LogoutRequest::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LogoutRequest::appid() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.LogoutRequest.appid)
  return appid_.GetNoArena();
}
inline void LogoutRequest::set_appid(const ::std::string& value) {
  
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.push.gateway.LogoutRequest.appid)
}
#if LANG_CXX11
inline void LogoutRequest::set_appid(::std::string&& value) {
  
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.push.gateway.LogoutRequest.appid)
}
#endif
inline void LogoutRequest::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.push.gateway.LogoutRequest.appid)
}
inline void LogoutRequest::set_appid(const char* value, size_t size) {
  
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.push.gateway.LogoutRequest.appid)
}
inline ::std::string* LogoutRequest::mutable_appid() {
  
  // @@protoc_insertion_point(field_mutable:grpc.push.gateway.LogoutRequest.appid)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LogoutRequest::release_appid() {
  // @@protoc_insertion_point(field_release:grpc.push.gateway.LogoutRequest.appid)
  
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LogoutRequest::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    
  } else {
    
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:grpc.push.gateway.LogoutRequest.appid)
}

// uint64 suid = 2;
inline void LogoutRequest::clear_suid() {
  suid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LogoutRequest::suid() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.LogoutRequest.suid)
  return suid_;
}
inline void LogoutRequest::set_suid(::google::protobuf::uint64 value) {
  
  suid_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.LogoutRequest.suid)
}

// uint32 uid = 3;
inline void LogoutRequest::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 LogoutRequest::uid() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.LogoutRequest.uid)
  return uid_;
}
inline void LogoutRequest::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.LogoutRequest.uid)
}

// bytes context = 4;
inline void LogoutRequest::clear_context() {
  context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LogoutRequest::context() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.LogoutRequest.context)
  return context_.GetNoArena();
}
inline void LogoutRequest::set_context(const ::std::string& value) {
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.push.gateway.LogoutRequest.context)
}
#if LANG_CXX11
inline void LogoutRequest::set_context(::std::string&& value) {
  
  context_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.push.gateway.LogoutRequest.context)
}
#endif
inline void LogoutRequest::set_context(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.push.gateway.LogoutRequest.context)
}
inline void LogoutRequest::set_context(const void* value, size_t size) {
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.push.gateway.LogoutRequest.context)
}
inline ::std::string* LogoutRequest::mutable_context() {
  
  // @@protoc_insertion_point(field_mutable:grpc.push.gateway.LogoutRequest.context)
  return context_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LogoutRequest::release_context() {
  // @@protoc_insertion_point(field_release:grpc.push.gateway.LogoutRequest.context)
  
  return context_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LogoutRequest::set_allocated_context(::std::string* context) {
  if (context != NULL) {
    
  } else {
    
  }
  context_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), context);
  // @@protoc_insertion_point(field_set_allocated:grpc.push.gateway.LogoutRequest.context)
}

// uint64 appKey = 5;
inline void LogoutRequest::clear_appkey() {
  appkey_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LogoutRequest::appkey() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.LogoutRequest.appKey)
  return appkey_;
}
inline void LogoutRequest::set_appkey(::google::protobuf::uint64 value) {
  
  appkey_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.LogoutRequest.appKey)
}

// .grpc.push.gateway.UserTerminalType termnialType = 6;
inline void LogoutRequest::clear_termnialtype() {
  termnialtype_ = 0;
}
inline ::grpc::push::gateway::UserTerminalType LogoutRequest::termnialtype() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.LogoutRequest.termnialType)
  return static_cast< ::grpc::push::gateway::UserTerminalType >(termnialtype_);
}
inline void LogoutRequest::set_termnialtype(::grpc::push::gateway::UserTerminalType value) {
  
  termnialtype_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.LogoutRequest.termnialType)
}

// -------------------------------------------------------------------

// LogoutResponse

// uint32 resCode = 1;
inline void LogoutResponse::clear_rescode() {
  rescode_ = 0u;
}
inline ::google::protobuf::uint32 LogoutResponse::rescode() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.LogoutResponse.resCode)
  return rescode_;
}
inline void LogoutResponse::set_rescode(::google::protobuf::uint32 value) {
  
  rescode_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.LogoutResponse.resCode)
}

// uint32 uid = 2;
inline void LogoutResponse::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 LogoutResponse::uid() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.LogoutResponse.uid)
  return uid_;
}
inline void LogoutResponse::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.LogoutResponse.uid)
}

// uint64 suid = 3;
inline void LogoutResponse::clear_suid() {
  suid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LogoutResponse::suid() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.LogoutResponse.suid)
  return suid_;
}
inline void LogoutResponse::set_suid(::google::protobuf::uint64 value) {
  
  suid_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.LogoutResponse.suid)
}

// bytes context = 4;
inline void LogoutResponse::clear_context() {
  context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LogoutResponse::context() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.LogoutResponse.context)
  return context_.GetNoArena();
}
inline void LogoutResponse::set_context(const ::std::string& value) {
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.push.gateway.LogoutResponse.context)
}
#if LANG_CXX11
inline void LogoutResponse::set_context(::std::string&& value) {
  
  context_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.push.gateway.LogoutResponse.context)
}
#endif
inline void LogoutResponse::set_context(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.push.gateway.LogoutResponse.context)
}
inline void LogoutResponse::set_context(const void* value, size_t size) {
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.push.gateway.LogoutResponse.context)
}
inline ::std::string* LogoutResponse::mutable_context() {
  
  // @@protoc_insertion_point(field_mutable:grpc.push.gateway.LogoutResponse.context)
  return context_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LogoutResponse::release_context() {
  // @@protoc_insertion_point(field_release:grpc.push.gateway.LogoutResponse.context)
  
  return context_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LogoutResponse::set_allocated_context(::std::string* context) {
  if (context != NULL) {
    
  } else {
    
  }
  context_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), context);
  // @@protoc_insertion_point(field_set_allocated:grpc.push.gateway.LogoutResponse.context)
}

// uint64 pushgwIp = 5;
inline void LogoutResponse::clear_pushgwip() {
  pushgwip_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LogoutResponse::pushgwip() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.LogoutResponse.pushgwIp)
  return pushgwip_;
}
inline void LogoutResponse::set_pushgwip(::google::protobuf::uint64 value) {
  
  pushgwip_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.LogoutResponse.pushgwIp)
}

// uint32 pushgwPort = 6;
inline void LogoutResponse::clear_pushgwport() {
  pushgwport_ = 0u;
}
inline ::google::protobuf::uint32 LogoutResponse::pushgwport() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.LogoutResponse.pushgwPort)
  return pushgwport_;
}
inline void LogoutResponse::set_pushgwport(::google::protobuf::uint32 value) {
  
  pushgwport_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.LogoutResponse.pushgwPort)
}

// string errMsg = 12;
inline void LogoutResponse::clear_errmsg() {
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LogoutResponse::errmsg() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.LogoutResponse.errMsg)
  return errmsg_.GetNoArena();
}
inline void LogoutResponse::set_errmsg(const ::std::string& value) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.push.gateway.LogoutResponse.errMsg)
}
#if LANG_CXX11
inline void LogoutResponse::set_errmsg(::std::string&& value) {
  
  errmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.push.gateway.LogoutResponse.errMsg)
}
#endif
inline void LogoutResponse::set_errmsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.push.gateway.LogoutResponse.errMsg)
}
inline void LogoutResponse::set_errmsg(const char* value, size_t size) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.push.gateway.LogoutResponse.errMsg)
}
inline ::std::string* LogoutResponse::mutable_errmsg() {
  
  // @@protoc_insertion_point(field_mutable:grpc.push.gateway.LogoutResponse.errMsg)
  return errmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LogoutResponse::release_errmsg() {
  // @@protoc_insertion_point(field_release:grpc.push.gateway.LogoutResponse.errMsg)
  
  return errmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LogoutResponse::set_allocated_errmsg(::std::string* errmsg) {
  if (errmsg != NULL) {
    
  } else {
    
  }
  errmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errmsg);
  // @@protoc_insertion_point(field_set_allocated:grpc.push.gateway.LogoutResponse.errMsg)
}

// -------------------------------------------------------------------

// JoinGroupRequest

// uint32 uid = 1;
inline void JoinGroupRequest::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 JoinGroupRequest::uid() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.JoinGroupRequest.uid)
  return uid_;
}
inline void JoinGroupRequest::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.JoinGroupRequest.uid)
}

// uint64 suid = 2;
inline void JoinGroupRequest::clear_suid() {
  suid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 JoinGroupRequest::suid() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.JoinGroupRequest.suid)
  return suid_;
}
inline void JoinGroupRequest::set_suid(::google::protobuf::uint64 value) {
  
  suid_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.JoinGroupRequest.suid)
}

// bytes context = 3;
inline void JoinGroupRequest::clear_context() {
  context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& JoinGroupRequest::context() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.JoinGroupRequest.context)
  return context_.GetNoArena();
}
inline void JoinGroupRequest::set_context(const ::std::string& value) {
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.push.gateway.JoinGroupRequest.context)
}
#if LANG_CXX11
inline void JoinGroupRequest::set_context(::std::string&& value) {
  
  context_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.push.gateway.JoinGroupRequest.context)
}
#endif
inline void JoinGroupRequest::set_context(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.push.gateway.JoinGroupRequest.context)
}
inline void JoinGroupRequest::set_context(const void* value, size_t size) {
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.push.gateway.JoinGroupRequest.context)
}
inline ::std::string* JoinGroupRequest::mutable_context() {
  
  // @@protoc_insertion_point(field_mutable:grpc.push.gateway.JoinGroupRequest.context)
  return context_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JoinGroupRequest::release_context() {
  // @@protoc_insertion_point(field_release:grpc.push.gateway.JoinGroupRequest.context)
  
  return context_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JoinGroupRequest::set_allocated_context(::std::string* context) {
  if (context != NULL) {
    
  } else {
    
  }
  context_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), context);
  // @@protoc_insertion_point(field_set_allocated:grpc.push.gateway.JoinGroupRequest.context)
}

// repeated .grpc.push.gateway.UserGroup userGroupSet = 4;
inline int JoinGroupRequest::usergroupset_size() const {
  return usergroupset_.size();
}
inline void JoinGroupRequest::clear_usergroupset() {
  usergroupset_.Clear();
}
inline ::grpc::push::gateway::UserGroup* JoinGroupRequest::mutable_usergroupset(int index) {
  // @@protoc_insertion_point(field_mutable:grpc.push.gateway.JoinGroupRequest.userGroupSet)
  return usergroupset_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::grpc::push::gateway::UserGroup >*
JoinGroupRequest::mutable_usergroupset() {
  // @@protoc_insertion_point(field_mutable_list:grpc.push.gateway.JoinGroupRequest.userGroupSet)
  return &usergroupset_;
}
inline const ::grpc::push::gateway::UserGroup& JoinGroupRequest::usergroupset(int index) const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.JoinGroupRequest.userGroupSet)
  return usergroupset_.Get(index);
}
inline ::grpc::push::gateway::UserGroup* JoinGroupRequest::add_usergroupset() {
  // @@protoc_insertion_point(field_add:grpc.push.gateway.JoinGroupRequest.userGroupSet)
  return usergroupset_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::grpc::push::gateway::UserGroup >&
JoinGroupRequest::usergroupset() const {
  // @@protoc_insertion_point(field_list:grpc.push.gateway.JoinGroupRequest.userGroupSet)
  return usergroupset_;
}

// -------------------------------------------------------------------

// JoinGroupResponse

// uint32 uid = 1;
inline void JoinGroupResponse::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 JoinGroupResponse::uid() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.JoinGroupResponse.uid)
  return uid_;
}
inline void JoinGroupResponse::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.JoinGroupResponse.uid)
}

// uint64 suid = 2;
inline void JoinGroupResponse::clear_suid() {
  suid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 JoinGroupResponse::suid() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.JoinGroupResponse.suid)
  return suid_;
}
inline void JoinGroupResponse::set_suid(::google::protobuf::uint64 value) {
  
  suid_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.JoinGroupResponse.suid)
}

// uint32 resCode = 3;
inline void JoinGroupResponse::clear_rescode() {
  rescode_ = 0u;
}
inline ::google::protobuf::uint32 JoinGroupResponse::rescode() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.JoinGroupResponse.resCode)
  return rescode_;
}
inline void JoinGroupResponse::set_rescode(::google::protobuf::uint32 value) {
  
  rescode_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.JoinGroupResponse.resCode)
}

// bytes context = 4;
inline void JoinGroupResponse::clear_context() {
  context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& JoinGroupResponse::context() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.JoinGroupResponse.context)
  return context_.GetNoArena();
}
inline void JoinGroupResponse::set_context(const ::std::string& value) {
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.push.gateway.JoinGroupResponse.context)
}
#if LANG_CXX11
inline void JoinGroupResponse::set_context(::std::string&& value) {
  
  context_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.push.gateway.JoinGroupResponse.context)
}
#endif
inline void JoinGroupResponse::set_context(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.push.gateway.JoinGroupResponse.context)
}
inline void JoinGroupResponse::set_context(const void* value, size_t size) {
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.push.gateway.JoinGroupResponse.context)
}
inline ::std::string* JoinGroupResponse::mutable_context() {
  
  // @@protoc_insertion_point(field_mutable:grpc.push.gateway.JoinGroupResponse.context)
  return context_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JoinGroupResponse::release_context() {
  // @@protoc_insertion_point(field_release:grpc.push.gateway.JoinGroupResponse.context)
  
  return context_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JoinGroupResponse::set_allocated_context(::std::string* context) {
  if (context != NULL) {
    
  } else {
    
  }
  context_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), context);
  // @@protoc_insertion_point(field_set_allocated:grpc.push.gateway.JoinGroupResponse.context)
}

// uint64 pushgwIp = 5;
inline void JoinGroupResponse::clear_pushgwip() {
  pushgwip_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 JoinGroupResponse::pushgwip() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.JoinGroupResponse.pushgwIp)
  return pushgwip_;
}
inline void JoinGroupResponse::set_pushgwip(::google::protobuf::uint64 value) {
  
  pushgwip_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.JoinGroupResponse.pushgwIp)
}

// uint32 pushgwPort = 6;
inline void JoinGroupResponse::clear_pushgwport() {
  pushgwport_ = 0u;
}
inline ::google::protobuf::uint32 JoinGroupResponse::pushgwport() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.JoinGroupResponse.pushgwPort)
  return pushgwport_;
}
inline void JoinGroupResponse::set_pushgwport(::google::protobuf::uint32 value) {
  
  pushgwport_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.JoinGroupResponse.pushgwPort)
}

// repeated .grpc.push.gateway.UserGroup userGroupSet = 7;
inline int JoinGroupResponse::usergroupset_size() const {
  return usergroupset_.size();
}
inline void JoinGroupResponse::clear_usergroupset() {
  usergroupset_.Clear();
}
inline ::grpc::push::gateway::UserGroup* JoinGroupResponse::mutable_usergroupset(int index) {
  // @@protoc_insertion_point(field_mutable:grpc.push.gateway.JoinGroupResponse.userGroupSet)
  return usergroupset_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::grpc::push::gateway::UserGroup >*
JoinGroupResponse::mutable_usergroupset() {
  // @@protoc_insertion_point(field_mutable_list:grpc.push.gateway.JoinGroupResponse.userGroupSet)
  return &usergroupset_;
}
inline const ::grpc::push::gateway::UserGroup& JoinGroupResponse::usergroupset(int index) const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.JoinGroupResponse.userGroupSet)
  return usergroupset_.Get(index);
}
inline ::grpc::push::gateway::UserGroup* JoinGroupResponse::add_usergroupset() {
  // @@protoc_insertion_point(field_add:grpc.push.gateway.JoinGroupResponse.userGroupSet)
  return usergroupset_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::grpc::push::gateway::UserGroup >&
JoinGroupResponse::usergroupset() const {
  // @@protoc_insertion_point(field_list:grpc.push.gateway.JoinGroupResponse.userGroupSet)
  return usergroupset_;
}

// string errMsg = 12;
inline void JoinGroupResponse::clear_errmsg() {
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& JoinGroupResponse::errmsg() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.JoinGroupResponse.errMsg)
  return errmsg_.GetNoArena();
}
inline void JoinGroupResponse::set_errmsg(const ::std::string& value) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.push.gateway.JoinGroupResponse.errMsg)
}
#if LANG_CXX11
inline void JoinGroupResponse::set_errmsg(::std::string&& value) {
  
  errmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.push.gateway.JoinGroupResponse.errMsg)
}
#endif
inline void JoinGroupResponse::set_errmsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.push.gateway.JoinGroupResponse.errMsg)
}
inline void JoinGroupResponse::set_errmsg(const char* value, size_t size) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.push.gateway.JoinGroupResponse.errMsg)
}
inline ::std::string* JoinGroupResponse::mutable_errmsg() {
  
  // @@protoc_insertion_point(field_mutable:grpc.push.gateway.JoinGroupResponse.errMsg)
  return errmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JoinGroupResponse::release_errmsg() {
  // @@protoc_insertion_point(field_release:grpc.push.gateway.JoinGroupResponse.errMsg)
  
  return errmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JoinGroupResponse::set_allocated_errmsg(::std::string* errmsg) {
  if (errmsg != NULL) {
    
  } else {
    
  }
  errmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errmsg);
  // @@protoc_insertion_point(field_set_allocated:grpc.push.gateway.JoinGroupResponse.errMsg)
}

// -------------------------------------------------------------------

// LeaveGroupRequest

// uint32 uid = 1;
inline void LeaveGroupRequest::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 LeaveGroupRequest::uid() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.LeaveGroupRequest.uid)
  return uid_;
}
inline void LeaveGroupRequest::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.LeaveGroupRequest.uid)
}

// uint64 suid = 2;
inline void LeaveGroupRequest::clear_suid() {
  suid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LeaveGroupRequest::suid() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.LeaveGroupRequest.suid)
  return suid_;
}
inline void LeaveGroupRequest::set_suid(::google::protobuf::uint64 value) {
  
  suid_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.LeaveGroupRequest.suid)
}

// bytes context = 3;
inline void LeaveGroupRequest::clear_context() {
  context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LeaveGroupRequest::context() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.LeaveGroupRequest.context)
  return context_.GetNoArena();
}
inline void LeaveGroupRequest::set_context(const ::std::string& value) {
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.push.gateway.LeaveGroupRequest.context)
}
#if LANG_CXX11
inline void LeaveGroupRequest::set_context(::std::string&& value) {
  
  context_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.push.gateway.LeaveGroupRequest.context)
}
#endif
inline void LeaveGroupRequest::set_context(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.push.gateway.LeaveGroupRequest.context)
}
inline void LeaveGroupRequest::set_context(const void* value, size_t size) {
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.push.gateway.LeaveGroupRequest.context)
}
inline ::std::string* LeaveGroupRequest::mutable_context() {
  
  // @@protoc_insertion_point(field_mutable:grpc.push.gateway.LeaveGroupRequest.context)
  return context_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LeaveGroupRequest::release_context() {
  // @@protoc_insertion_point(field_release:grpc.push.gateway.LeaveGroupRequest.context)
  
  return context_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LeaveGroupRequest::set_allocated_context(::std::string* context) {
  if (context != NULL) {
    
  } else {
    
  }
  context_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), context);
  // @@protoc_insertion_point(field_set_allocated:grpc.push.gateway.LeaveGroupRequest.context)
}

// repeated .grpc.push.gateway.UserGroup userGroupSet = 4;
inline int LeaveGroupRequest::usergroupset_size() const {
  return usergroupset_.size();
}
inline void LeaveGroupRequest::clear_usergroupset() {
  usergroupset_.Clear();
}
inline ::grpc::push::gateway::UserGroup* LeaveGroupRequest::mutable_usergroupset(int index) {
  // @@protoc_insertion_point(field_mutable:grpc.push.gateway.LeaveGroupRequest.userGroupSet)
  return usergroupset_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::grpc::push::gateway::UserGroup >*
LeaveGroupRequest::mutable_usergroupset() {
  // @@protoc_insertion_point(field_mutable_list:grpc.push.gateway.LeaveGroupRequest.userGroupSet)
  return &usergroupset_;
}
inline const ::grpc::push::gateway::UserGroup& LeaveGroupRequest::usergroupset(int index) const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.LeaveGroupRequest.userGroupSet)
  return usergroupset_.Get(index);
}
inline ::grpc::push::gateway::UserGroup* LeaveGroupRequest::add_usergroupset() {
  // @@protoc_insertion_point(field_add:grpc.push.gateway.LeaveGroupRequest.userGroupSet)
  return usergroupset_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::grpc::push::gateway::UserGroup >&
LeaveGroupRequest::usergroupset() const {
  // @@protoc_insertion_point(field_list:grpc.push.gateway.LeaveGroupRequest.userGroupSet)
  return usergroupset_;
}

// -------------------------------------------------------------------

// LeaveGroupResponse

// uint32 uid = 1;
inline void LeaveGroupResponse::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 LeaveGroupResponse::uid() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.LeaveGroupResponse.uid)
  return uid_;
}
inline void LeaveGroupResponse::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.LeaveGroupResponse.uid)
}

// uint64 suid = 2;
inline void LeaveGroupResponse::clear_suid() {
  suid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LeaveGroupResponse::suid() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.LeaveGroupResponse.suid)
  return suid_;
}
inline void LeaveGroupResponse::set_suid(::google::protobuf::uint64 value) {
  
  suid_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.LeaveGroupResponse.suid)
}

// uint32 resCode = 3;
inline void LeaveGroupResponse::clear_rescode() {
  rescode_ = 0u;
}
inline ::google::protobuf::uint32 LeaveGroupResponse::rescode() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.LeaveGroupResponse.resCode)
  return rescode_;
}
inline void LeaveGroupResponse::set_rescode(::google::protobuf::uint32 value) {
  
  rescode_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.LeaveGroupResponse.resCode)
}

// bytes context = 4;
inline void LeaveGroupResponse::clear_context() {
  context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LeaveGroupResponse::context() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.LeaveGroupResponse.context)
  return context_.GetNoArena();
}
inline void LeaveGroupResponse::set_context(const ::std::string& value) {
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.push.gateway.LeaveGroupResponse.context)
}
#if LANG_CXX11
inline void LeaveGroupResponse::set_context(::std::string&& value) {
  
  context_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.push.gateway.LeaveGroupResponse.context)
}
#endif
inline void LeaveGroupResponse::set_context(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.push.gateway.LeaveGroupResponse.context)
}
inline void LeaveGroupResponse::set_context(const void* value, size_t size) {
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.push.gateway.LeaveGroupResponse.context)
}
inline ::std::string* LeaveGroupResponse::mutable_context() {
  
  // @@protoc_insertion_point(field_mutable:grpc.push.gateway.LeaveGroupResponse.context)
  return context_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LeaveGroupResponse::release_context() {
  // @@protoc_insertion_point(field_release:grpc.push.gateway.LeaveGroupResponse.context)
  
  return context_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LeaveGroupResponse::set_allocated_context(::std::string* context) {
  if (context != NULL) {
    
  } else {
    
  }
  context_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), context);
  // @@protoc_insertion_point(field_set_allocated:grpc.push.gateway.LeaveGroupResponse.context)
}

// uint64 pushgwIp = 5;
inline void LeaveGroupResponse::clear_pushgwip() {
  pushgwip_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LeaveGroupResponse::pushgwip() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.LeaveGroupResponse.pushgwIp)
  return pushgwip_;
}
inline void LeaveGroupResponse::set_pushgwip(::google::protobuf::uint64 value) {
  
  pushgwip_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.LeaveGroupResponse.pushgwIp)
}

// uint32 pushgwPort = 6;
inline void LeaveGroupResponse::clear_pushgwport() {
  pushgwport_ = 0u;
}
inline ::google::protobuf::uint32 LeaveGroupResponse::pushgwport() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.LeaveGroupResponse.pushgwPort)
  return pushgwport_;
}
inline void LeaveGroupResponse::set_pushgwport(::google::protobuf::uint32 value) {
  
  pushgwport_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.LeaveGroupResponse.pushgwPort)
}

// repeated .grpc.push.gateway.UserGroup userGroupSet = 7;
inline int LeaveGroupResponse::usergroupset_size() const {
  return usergroupset_.size();
}
inline void LeaveGroupResponse::clear_usergroupset() {
  usergroupset_.Clear();
}
inline ::grpc::push::gateway::UserGroup* LeaveGroupResponse::mutable_usergroupset(int index) {
  // @@protoc_insertion_point(field_mutable:grpc.push.gateway.LeaveGroupResponse.userGroupSet)
  return usergroupset_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::grpc::push::gateway::UserGroup >*
LeaveGroupResponse::mutable_usergroupset() {
  // @@protoc_insertion_point(field_mutable_list:grpc.push.gateway.LeaveGroupResponse.userGroupSet)
  return &usergroupset_;
}
inline const ::grpc::push::gateway::UserGroup& LeaveGroupResponse::usergroupset(int index) const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.LeaveGroupResponse.userGroupSet)
  return usergroupset_.Get(index);
}
inline ::grpc::push::gateway::UserGroup* LeaveGroupResponse::add_usergroupset() {
  // @@protoc_insertion_point(field_add:grpc.push.gateway.LeaveGroupResponse.userGroupSet)
  return usergroupset_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::grpc::push::gateway::UserGroup >&
LeaveGroupResponse::usergroupset() const {
  // @@protoc_insertion_point(field_list:grpc.push.gateway.LeaveGroupResponse.userGroupSet)
  return usergroupset_;
}

// string errMsg = 12;
inline void LeaveGroupResponse::clear_errmsg() {
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LeaveGroupResponse::errmsg() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.LeaveGroupResponse.errMsg)
  return errmsg_.GetNoArena();
}
inline void LeaveGroupResponse::set_errmsg(const ::std::string& value) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.push.gateway.LeaveGroupResponse.errMsg)
}
#if LANG_CXX11
inline void LeaveGroupResponse::set_errmsg(::std::string&& value) {
  
  errmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.push.gateway.LeaveGroupResponse.errMsg)
}
#endif
inline void LeaveGroupResponse::set_errmsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.push.gateway.LeaveGroupResponse.errMsg)
}
inline void LeaveGroupResponse::set_errmsg(const char* value, size_t size) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.push.gateway.LeaveGroupResponse.errMsg)
}
inline ::std::string* LeaveGroupResponse::mutable_errmsg() {
  
  // @@protoc_insertion_point(field_mutable:grpc.push.gateway.LeaveGroupResponse.errMsg)
  return errmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LeaveGroupResponse::release_errmsg() {
  // @@protoc_insertion_point(field_release:grpc.push.gateway.LeaveGroupResponse.errMsg)
  
  return errmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LeaveGroupResponse::set_allocated_errmsg(::std::string* errmsg) {
  if (errmsg != NULL) {
    
  } else {
    
  }
  errmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errmsg);
  // @@protoc_insertion_point(field_set_allocated:grpc.push.gateway.LeaveGroupResponse.errMsg)
}

// -------------------------------------------------------------------

// PingRequest

// uint32 uid = 1;
inline void PingRequest::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 PingRequest::uid() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.PingRequest.uid)
  return uid_;
}
inline void PingRequest::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.PingRequest.uid)
}

// uint64 suid = 2;
inline void PingRequest::clear_suid() {
  suid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PingRequest::suid() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.PingRequest.suid)
  return suid_;
}
inline void PingRequest::set_suid(::google::protobuf::uint64 value) {
  
  suid_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.PingRequest.suid)
}

// bytes context = 3;
inline void PingRequest::clear_context() {
  context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PingRequest::context() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.PingRequest.context)
  return context_.GetNoArena();
}
inline void PingRequest::set_context(const ::std::string& value) {
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.push.gateway.PingRequest.context)
}
#if LANG_CXX11
inline void PingRequest::set_context(::std::string&& value) {
  
  context_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.push.gateway.PingRequest.context)
}
#endif
inline void PingRequest::set_context(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.push.gateway.PingRequest.context)
}
inline void PingRequest::set_context(const void* value, size_t size) {
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.push.gateway.PingRequest.context)
}
inline ::std::string* PingRequest::mutable_context() {
  
  // @@protoc_insertion_point(field_mutable:grpc.push.gateway.PingRequest.context)
  return context_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PingRequest::release_context() {
  // @@protoc_insertion_point(field_release:grpc.push.gateway.PingRequest.context)
  
  return context_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PingRequest::set_allocated_context(::std::string* context) {
  if (context != NULL) {
    
  } else {
    
  }
  context_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), context);
  // @@protoc_insertion_point(field_set_allocated:grpc.push.gateway.PingRequest.context)
}

// -------------------------------------------------------------------

// PongResponse

// uint32 uid = 1;
inline void PongResponse::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 PongResponse::uid() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.PongResponse.uid)
  return uid_;
}
inline void PongResponse::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.PongResponse.uid)
}

// uint64 suid = 2;
inline void PongResponse::clear_suid() {
  suid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PongResponse::suid() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.PongResponse.suid)
  return suid_;
}
inline void PongResponse::set_suid(::google::protobuf::uint64 value) {
  
  suid_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.PongResponse.suid)
}

// bytes context = 3;
inline void PongResponse::clear_context() {
  context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PongResponse::context() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.PongResponse.context)
  return context_.GetNoArena();
}
inline void PongResponse::set_context(const ::std::string& value) {
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.push.gateway.PongResponse.context)
}
#if LANG_CXX11
inline void PongResponse::set_context(::std::string&& value) {
  
  context_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.push.gateway.PongResponse.context)
}
#endif
inline void PongResponse::set_context(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.push.gateway.PongResponse.context)
}
inline void PongResponse::set_context(const void* value, size_t size) {
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.push.gateway.PongResponse.context)
}
inline ::std::string* PongResponse::mutable_context() {
  
  // @@protoc_insertion_point(field_mutable:grpc.push.gateway.PongResponse.context)
  return context_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PongResponse::release_context() {
  // @@protoc_insertion_point(field_release:grpc.push.gateway.PongResponse.context)
  
  return context_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PongResponse::set_allocated_context(::std::string* context) {
  if (context != NULL) {
    
  } else {
    
  }
  context_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), context);
  // @@protoc_insertion_point(field_set_allocated:grpc.push.gateway.PongResponse.context)
}

// uint64 pushgwIp = 5;
inline void PongResponse::clear_pushgwip() {
  pushgwip_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PongResponse::pushgwip() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.PongResponse.pushgwIp)
  return pushgwip_;
}
inline void PongResponse::set_pushgwip(::google::protobuf::uint64 value) {
  
  pushgwip_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.PongResponse.pushgwIp)
}

// uint32 pushgwPort = 6;
inline void PongResponse::clear_pushgwport() {
  pushgwport_ = 0u;
}
inline ::google::protobuf::uint32 PongResponse::pushgwport() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.PongResponse.pushgwPort)
  return pushgwport_;
}
inline void PongResponse::set_pushgwport(::google::protobuf::uint32 value) {
  
  pushgwport_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.PongResponse.pushgwPort)
}

// -------------------------------------------------------------------

// PushRegReq

// .grpc.push.gateway.StreamURI uri = 1;
inline void PushRegReq::clear_uri() {
  uri_ = 0;
}
inline ::grpc::push::gateway::StreamURI PushRegReq::uri() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.PushRegReq.uri)
  return static_cast< ::grpc::push::gateway::StreamURI >(uri_);
}
inline void PushRegReq::set_uri(::grpc::push::gateway::StreamURI value) {
  
  uri_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.PushRegReq.uri)
}

// bytes msgData = 2;
inline void PushRegReq::clear_msgdata() {
  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PushRegReq::msgdata() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.PushRegReq.msgData)
  return msgdata_.GetNoArena();
}
inline void PushRegReq::set_msgdata(const ::std::string& value) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.push.gateway.PushRegReq.msgData)
}
#if LANG_CXX11
inline void PushRegReq::set_msgdata(::std::string&& value) {
  
  msgdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.push.gateway.PushRegReq.msgData)
}
#endif
inline void PushRegReq::set_msgdata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.push.gateway.PushRegReq.msgData)
}
inline void PushRegReq::set_msgdata(const void* value, size_t size) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.push.gateway.PushRegReq.msgData)
}
inline ::std::string* PushRegReq::mutable_msgdata() {
  
  // @@protoc_insertion_point(field_mutable:grpc.push.gateway.PushRegReq.msgData)
  return msgdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PushRegReq::release_msgdata() {
  // @@protoc_insertion_point(field_release:grpc.push.gateway.PushRegReq.msgData)
  
  return msgdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PushRegReq::set_allocated_msgdata(::std::string* msgdata) {
  if (msgdata != NULL) {
    
  } else {
    
  }
  msgdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgdata);
  // @@protoc_insertion_point(field_set_allocated:grpc.push.gateway.PushRegReq.msgData)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// PushData

// uint64 suid = 1;
inline void PushData::clear_suid() {
  suid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PushData::suid() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.PushData.suid)
  return suid_;
}
inline void PushData::set_suid(::google::protobuf::uint64 value) {
  
  suid_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.PushData.suid)
}

// uint32 uid = 2;
inline void PushData::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 PushData::uid() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.PushData.uid)
  return uid_;
}
inline void PushData::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.PushData.uid)
}

// uint64 GroupType = 3;
inline void PushData::clear_grouptype() {
  grouptype_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PushData::grouptype() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.PushData.GroupType)
  return grouptype_;
}
inline void PushData::set_grouptype(::google::protobuf::uint64 value) {
  
  grouptype_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.PushData.GroupType)
}

// uint64 GroupId = 4;
inline void PushData::clear_groupid() {
  groupid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PushData::groupid() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.PushData.GroupId)
  return groupid_;
}
inline void PushData::set_groupid(::google::protobuf::uint64 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.PushData.GroupId)
}

// string serviceName = 5;
inline void PushData::clear_servicename() {
  servicename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PushData::servicename() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.PushData.serviceName)
  return servicename_.GetNoArena();
}
inline void PushData::set_servicename(const ::std::string& value) {
  
  servicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.push.gateway.PushData.serviceName)
}
#if LANG_CXX11
inline void PushData::set_servicename(::std::string&& value) {
  
  servicename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.push.gateway.PushData.serviceName)
}
#endif
inline void PushData::set_servicename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  servicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.push.gateway.PushData.serviceName)
}
inline void PushData::set_servicename(const char* value, size_t size) {
  
  servicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.push.gateway.PushData.serviceName)
}
inline ::std::string* PushData::mutable_servicename() {
  
  // @@protoc_insertion_point(field_mutable:grpc.push.gateway.PushData.serviceName)
  return servicename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PushData::release_servicename() {
  // @@protoc_insertion_point(field_release:grpc.push.gateway.PushData.serviceName)
  
  return servicename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PushData::set_allocated_servicename(::std::string* servicename) {
  if (servicename != NULL) {
    
  } else {
    
  }
  servicename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), servicename);
  // @@protoc_insertion_point(field_set_allocated:grpc.push.gateway.PushData.serviceName)
}

// .grpc.push.gateway.StreamURI uri = 6;
inline void PushData::clear_uri() {
  uri_ = 0;
}
inline ::grpc::push::gateway::StreamURI PushData::uri() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.PushData.uri)
  return static_cast< ::grpc::push::gateway::StreamURI >(uri_);
}
inline void PushData::set_uri(::grpc::push::gateway::StreamURI value) {
  
  uri_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.PushData.uri)
}

// bytes msgData = 7;
inline void PushData::clear_msgdata() {
  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PushData::msgdata() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.PushData.msgData)
  return msgdata_.GetNoArena();
}
inline void PushData::set_msgdata(const ::std::string& value) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.push.gateway.PushData.msgData)
}
#if LANG_CXX11
inline void PushData::set_msgdata(::std::string&& value) {
  
  msgdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.push.gateway.PushData.msgData)
}
#endif
inline void PushData::set_msgdata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.push.gateway.PushData.msgData)
}
inline void PushData::set_msgdata(const void* value, size_t size) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.push.gateway.PushData.msgData)
}
inline ::std::string* PushData::mutable_msgdata() {
  
  // @@protoc_insertion_point(field_mutable:grpc.push.gateway.PushData.msgData)
  return msgdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PushData::release_msgdata() {
  // @@protoc_insertion_point(field_release:grpc.push.gateway.PushData.msgData)
  
  return msgdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PushData::set_allocated_msgdata(::std::string* msgdata) {
  if (msgdata != NULL) {
    
  } else {
    
  }
  msgdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgdata);
  // @@protoc_insertion_point(field_set_allocated:grpc.push.gateway.PushData.msgData)
}

// uint64 seqNum = 8;
inline void PushData::clear_seqnum() {
  seqnum_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PushData::seqnum() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.PushData.seqNum)
  return seqnum_;
}
inline void PushData::set_seqnum(::google::protobuf::uint64 value) {
  
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.PushData.seqNum)
}

// string serverId = 9;
inline void PushData::clear_serverid() {
  serverid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PushData::serverid() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.PushData.serverId)
  return serverid_.GetNoArena();
}
inline void PushData::set_serverid(const ::std::string& value) {
  
  serverid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.push.gateway.PushData.serverId)
}
#if LANG_CXX11
inline void PushData::set_serverid(::std::string&& value) {
  
  serverid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.push.gateway.PushData.serverId)
}
#endif
inline void PushData::set_serverid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  serverid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.push.gateway.PushData.serverId)
}
inline void PushData::set_serverid(const char* value, size_t size) {
  
  serverid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.push.gateway.PushData.serverId)
}
inline ::std::string* PushData::mutable_serverid() {
  
  // @@protoc_insertion_point(field_mutable:grpc.push.gateway.PushData.serverId)
  return serverid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PushData::release_serverid() {
  // @@protoc_insertion_point(field_release:grpc.push.gateway.PushData.serverId)
  
  return serverid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PushData::set_allocated_serverid(::std::string* serverid) {
  if (serverid != NULL) {
    
  } else {
    
  }
  serverid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serverid);
  // @@protoc_insertion_point(field_set_allocated:grpc.push.gateway.PushData.serverId)
}

// map<uint32, string> key2Exstr = 10;
inline int PushData::key2exstr_size() const {
  return key2exstr_.size();
}
inline void PushData::clear_key2exstr() {
  key2exstr_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >&
PushData::key2exstr() const {
  // @@protoc_insertion_point(field_map:grpc.push.gateway.PushData.key2Exstr)
  return key2exstr_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >*
PushData::mutable_key2exstr() {
  // @@protoc_insertion_point(field_mutable_map:grpc.push.gateway.PushData.key2Exstr)
  return key2exstr_.MutableMap();
}

// uint32 originalURI = 11;
inline void PushData::clear_originaluri() {
  originaluri_ = 0u;
}
inline ::google::protobuf::uint32 PushData::originaluri() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.PushData.originalURI)
  return originaluri_;
}
inline void PushData::set_originaluri(::google::protobuf::uint32 value) {
  
  originaluri_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.PushData.originalURI)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// PushToClientReq

// bytes context = 1;
inline void PushToClientReq::clear_context() {
  context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PushToClientReq::context() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.PushToClientReq.context)
  return context_.GetNoArena();
}
inline void PushToClientReq::set_context(const ::std::string& value) {
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.push.gateway.PushToClientReq.context)
}
#if LANG_CXX11
inline void PushToClientReq::set_context(::std::string&& value) {
  
  context_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.push.gateway.PushToClientReq.context)
}
#endif
inline void PushToClientReq::set_context(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.push.gateway.PushToClientReq.context)
}
inline void PushToClientReq::set_context(const void* value, size_t size) {
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.push.gateway.PushToClientReq.context)
}
inline ::std::string* PushToClientReq::mutable_context() {
  
  // @@protoc_insertion_point(field_mutable:grpc.push.gateway.PushToClientReq.context)
  return context_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PushToClientReq::release_context() {
  // @@protoc_insertion_point(field_release:grpc.push.gateway.PushToClientReq.context)
  
  return context_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PushToClientReq::set_allocated_context(::std::string* context) {
  if (context != NULL) {
    
  } else {
    
  }
  context_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), context);
  // @@protoc_insertion_point(field_set_allocated:grpc.push.gateway.PushToClientReq.context)
}

// string fromSrvId = 2;
inline void PushToClientReq::clear_fromsrvid() {
  fromsrvid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PushToClientReq::fromsrvid() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.PushToClientReq.fromSrvId)
  return fromsrvid_.GetNoArena();
}
inline void PushToClientReq::set_fromsrvid(const ::std::string& value) {
  
  fromsrvid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.push.gateway.PushToClientReq.fromSrvId)
}
#if LANG_CXX11
inline void PushToClientReq::set_fromsrvid(::std::string&& value) {
  
  fromsrvid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.push.gateway.PushToClientReq.fromSrvId)
}
#endif
inline void PushToClientReq::set_fromsrvid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  fromsrvid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.push.gateway.PushToClientReq.fromSrvId)
}
inline void PushToClientReq::set_fromsrvid(const char* value, size_t size) {
  
  fromsrvid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.push.gateway.PushToClientReq.fromSrvId)
}
inline ::std::string* PushToClientReq::mutable_fromsrvid() {
  
  // @@protoc_insertion_point(field_mutable:grpc.push.gateway.PushToClientReq.fromSrvId)
  return fromsrvid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PushToClientReq::release_fromsrvid() {
  // @@protoc_insertion_point(field_release:grpc.push.gateway.PushToClientReq.fromSrvId)
  
  return fromsrvid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PushToClientReq::set_allocated_fromsrvid(::std::string* fromsrvid) {
  if (fromsrvid != NULL) {
    
  } else {
    
  }
  fromsrvid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fromsrvid);
  // @@protoc_insertion_point(field_set_allocated:grpc.push.gateway.PushToClientReq.fromSrvId)
}

// string serviceName = 3;
inline void PushToClientReq::clear_servicename() {
  servicename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PushToClientReq::servicename() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.PushToClientReq.serviceName)
  return servicename_.GetNoArena();
}
inline void PushToClientReq::set_servicename(const ::std::string& value) {
  
  servicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.push.gateway.PushToClientReq.serviceName)
}
#if LANG_CXX11
inline void PushToClientReq::set_servicename(::std::string&& value) {
  
  servicename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.push.gateway.PushToClientReq.serviceName)
}
#endif
inline void PushToClientReq::set_servicename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  servicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.push.gateway.PushToClientReq.serviceName)
}
inline void PushToClientReq::set_servicename(const char* value, size_t size) {
  
  servicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.push.gateway.PushToClientReq.serviceName)
}
inline ::std::string* PushToClientReq::mutable_servicename() {
  
  // @@protoc_insertion_point(field_mutable:grpc.push.gateway.PushToClientReq.serviceName)
  return servicename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PushToClientReq::release_servicename() {
  // @@protoc_insertion_point(field_release:grpc.push.gateway.PushToClientReq.serviceName)
  
  return servicename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PushToClientReq::set_allocated_servicename(::std::string* servicename) {
  if (servicename != NULL) {
    
  } else {
    
  }
  servicename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), servicename);
  // @@protoc_insertion_point(field_set_allocated:grpc.push.gateway.PushToClientReq.serviceName)
}

// uint64 suid = 4;
inline void PushToClientReq::clear_suid() {
  suid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PushToClientReq::suid() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.PushToClientReq.suid)
  return suid_;
}
inline void PushToClientReq::set_suid(::google::protobuf::uint64 value) {
  
  suid_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.PushToClientReq.suid)
}

// uint32 uid = 5;
inline void PushToClientReq::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 PushToClientReq::uid() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.PushToClientReq.uid)
  return uid_;
}
inline void PushToClientReq::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.PushToClientReq.uid)
}

// uint32 fromUid = 6;
inline void PushToClientReq::clear_fromuid() {
  fromuid_ = 0u;
}
inline ::google::protobuf::uint32 PushToClientReq::fromuid() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.PushToClientReq.fromUid)
  return fromuid_;
}
inline void PushToClientReq::set_fromuid(::google::protobuf::uint32 value) {
  
  fromuid_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.PushToClientReq.fromUid)
}

// bytes data = 9;
inline void PushToClientReq::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PushToClientReq::data() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.PushToClientReq.data)
  return data_.GetNoArena();
}
inline void PushToClientReq::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.push.gateway.PushToClientReq.data)
}
#if LANG_CXX11
inline void PushToClientReq::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.push.gateway.PushToClientReq.data)
}
#endif
inline void PushToClientReq::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.push.gateway.PushToClientReq.data)
}
inline void PushToClientReq::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.push.gateway.PushToClientReq.data)
}
inline ::std::string* PushToClientReq::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:grpc.push.gateway.PushToClientReq.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PushToClientReq::release_data() {
  // @@protoc_insertion_point(field_release:grpc.push.gateway.PushToClientReq.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PushToClientReq::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:grpc.push.gateway.PushToClientReq.data)
}

// map<uint32, string> key2Exstr = 10;
inline int PushToClientReq::key2exstr_size() const {
  return key2exstr_.size();
}
inline void PushToClientReq::clear_key2exstr() {
  key2exstr_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >&
PushToClientReq::key2exstr() const {
  // @@protoc_insertion_point(field_map:grpc.push.gateway.PushToClientReq.key2Exstr)
  return key2exstr_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >*
PushToClientReq::mutable_key2exstr() {
  // @@protoc_insertion_point(field_mutable_map:grpc.push.gateway.PushToClientReq.key2Exstr)
  return key2exstr_.MutableMap();
}

// uint64 seqid = 11;
inline void PushToClientReq::clear_seqid() {
  seqid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PushToClientReq::seqid() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.PushToClientReq.seqid)
  return seqid_;
}
inline void PushToClientReq::set_seqid(::google::protobuf::uint64 value) {
  
  seqid_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.PushToClientReq.seqid)
}

// uint32 originalURI = 12;
inline void PushToClientReq::clear_originaluri() {
  originaluri_ = 0u;
}
inline ::google::protobuf::uint32 PushToClientReq::originaluri() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.PushToClientReq.originalURI)
  return originaluri_;
}
inline void PushToClientReq::set_originaluri(::google::protobuf::uint32 value) {
  
  originaluri_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.PushToClientReq.originalURI)
}

// -------------------------------------------------------------------

// PushToClientResp

// uint32 resCode = 1;
inline void PushToClientResp::clear_rescode() {
  rescode_ = 0u;
}
inline ::google::protobuf::uint32 PushToClientResp::rescode() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.PushToClientResp.resCode)
  return rescode_;
}
inline void PushToClientResp::set_rescode(::google::protobuf::uint32 value) {
  
  rescode_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.PushToClientResp.resCode)
}

// bytes context = 2;
inline void PushToClientResp::clear_context() {
  context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PushToClientResp::context() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.PushToClientResp.context)
  return context_.GetNoArena();
}
inline void PushToClientResp::set_context(const ::std::string& value) {
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.push.gateway.PushToClientResp.context)
}
#if LANG_CXX11
inline void PushToClientResp::set_context(::std::string&& value) {
  
  context_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.push.gateway.PushToClientResp.context)
}
#endif
inline void PushToClientResp::set_context(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.push.gateway.PushToClientResp.context)
}
inline void PushToClientResp::set_context(const void* value, size_t size) {
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.push.gateway.PushToClientResp.context)
}
inline ::std::string* PushToClientResp::mutable_context() {
  
  // @@protoc_insertion_point(field_mutable:grpc.push.gateway.PushToClientResp.context)
  return context_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PushToClientResp::release_context() {
  // @@protoc_insertion_point(field_release:grpc.push.gateway.PushToClientResp.context)
  
  return context_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PushToClientResp::set_allocated_context(::std::string* context) {
  if (context != NULL) {
    
  } else {
    
  }
  context_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), context);
  // @@protoc_insertion_point(field_set_allocated:grpc.push.gateway.PushToClientResp.context)
}

// uint64 seqid = 3;
inline void PushToClientResp::clear_seqid() {
  seqid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PushToClientResp::seqid() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.PushToClientResp.seqid)
  return seqid_;
}
inline void PushToClientResp::set_seqid(::google::protobuf::uint64 value) {
  
  seqid_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.PushToClientResp.seqid)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// PushToGroupReq

// bytes context = 1;
inline void PushToGroupReq::clear_context() {
  context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PushToGroupReq::context() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.PushToGroupReq.context)
  return context_.GetNoArena();
}
inline void PushToGroupReq::set_context(const ::std::string& value) {
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.push.gateway.PushToGroupReq.context)
}
#if LANG_CXX11
inline void PushToGroupReq::set_context(::std::string&& value) {
  
  context_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.push.gateway.PushToGroupReq.context)
}
#endif
inline void PushToGroupReq::set_context(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.push.gateway.PushToGroupReq.context)
}
inline void PushToGroupReq::set_context(const void* value, size_t size) {
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.push.gateway.PushToGroupReq.context)
}
inline ::std::string* PushToGroupReq::mutable_context() {
  
  // @@protoc_insertion_point(field_mutable:grpc.push.gateway.PushToGroupReq.context)
  return context_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PushToGroupReq::release_context() {
  // @@protoc_insertion_point(field_release:grpc.push.gateway.PushToGroupReq.context)
  
  return context_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PushToGroupReq::set_allocated_context(::std::string* context) {
  if (context != NULL) {
    
  } else {
    
  }
  context_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), context);
  // @@protoc_insertion_point(field_set_allocated:grpc.push.gateway.PushToGroupReq.context)
}

// string fromSrvId = 2;
inline void PushToGroupReq::clear_fromsrvid() {
  fromsrvid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PushToGroupReq::fromsrvid() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.PushToGroupReq.fromSrvId)
  return fromsrvid_.GetNoArena();
}
inline void PushToGroupReq::set_fromsrvid(const ::std::string& value) {
  
  fromsrvid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.push.gateway.PushToGroupReq.fromSrvId)
}
#if LANG_CXX11
inline void PushToGroupReq::set_fromsrvid(::std::string&& value) {
  
  fromsrvid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.push.gateway.PushToGroupReq.fromSrvId)
}
#endif
inline void PushToGroupReq::set_fromsrvid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  fromsrvid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.push.gateway.PushToGroupReq.fromSrvId)
}
inline void PushToGroupReq::set_fromsrvid(const char* value, size_t size) {
  
  fromsrvid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.push.gateway.PushToGroupReq.fromSrvId)
}
inline ::std::string* PushToGroupReq::mutable_fromsrvid() {
  
  // @@protoc_insertion_point(field_mutable:grpc.push.gateway.PushToGroupReq.fromSrvId)
  return fromsrvid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PushToGroupReq::release_fromsrvid() {
  // @@protoc_insertion_point(field_release:grpc.push.gateway.PushToGroupReq.fromSrvId)
  
  return fromsrvid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PushToGroupReq::set_allocated_fromsrvid(::std::string* fromsrvid) {
  if (fromsrvid != NULL) {
    
  } else {
    
  }
  fromsrvid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fromsrvid);
  // @@protoc_insertion_point(field_set_allocated:grpc.push.gateway.PushToGroupReq.fromSrvId)
}

// string serviceName = 3;
inline void PushToGroupReq::clear_servicename() {
  servicename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PushToGroupReq::servicename() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.PushToGroupReq.serviceName)
  return servicename_.GetNoArena();
}
inline void PushToGroupReq::set_servicename(const ::std::string& value) {
  
  servicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.push.gateway.PushToGroupReq.serviceName)
}
#if LANG_CXX11
inline void PushToGroupReq::set_servicename(::std::string&& value) {
  
  servicename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.push.gateway.PushToGroupReq.serviceName)
}
#endif
inline void PushToGroupReq::set_servicename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  servicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.push.gateway.PushToGroupReq.serviceName)
}
inline void PushToGroupReq::set_servicename(const char* value, size_t size) {
  
  servicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.push.gateway.PushToGroupReq.serviceName)
}
inline ::std::string* PushToGroupReq::mutable_servicename() {
  
  // @@protoc_insertion_point(field_mutable:grpc.push.gateway.PushToGroupReq.serviceName)
  return servicename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PushToGroupReq::release_servicename() {
  // @@protoc_insertion_point(field_release:grpc.push.gateway.PushToGroupReq.serviceName)
  
  return servicename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PushToGroupReq::set_allocated_servicename(::std::string* servicename) {
  if (servicename != NULL) {
    
  } else {
    
  }
  servicename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), servicename);
  // @@protoc_insertion_point(field_set_allocated:grpc.push.gateway.PushToGroupReq.serviceName)
}

// uint32 fromUid = 6;
inline void PushToGroupReq::clear_fromuid() {
  fromuid_ = 0u;
}
inline ::google::protobuf::uint32 PushToGroupReq::fromuid() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.PushToGroupReq.fromUid)
  return fromuid_;
}
inline void PushToGroupReq::set_fromuid(::google::protobuf::uint32 value) {
  
  fromuid_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.PushToGroupReq.fromUid)
}

// uint64 GroupType = 7;
inline void PushToGroupReq::clear_grouptype() {
  grouptype_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PushToGroupReq::grouptype() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.PushToGroupReq.GroupType)
  return grouptype_;
}
inline void PushToGroupReq::set_grouptype(::google::protobuf::uint64 value) {
  
  grouptype_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.PushToGroupReq.GroupType)
}

// uint64 GroupId = 8;
inline void PushToGroupReq::clear_groupid() {
  groupid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PushToGroupReq::groupid() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.PushToGroupReq.GroupId)
  return groupid_;
}
inline void PushToGroupReq::set_groupid(::google::protobuf::uint64 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.PushToGroupReq.GroupId)
}

// bytes data = 9;
inline void PushToGroupReq::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PushToGroupReq::data() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.PushToGroupReq.data)
  return data_.GetNoArena();
}
inline void PushToGroupReq::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.push.gateway.PushToGroupReq.data)
}
#if LANG_CXX11
inline void PushToGroupReq::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.push.gateway.PushToGroupReq.data)
}
#endif
inline void PushToGroupReq::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.push.gateway.PushToGroupReq.data)
}
inline void PushToGroupReq::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.push.gateway.PushToGroupReq.data)
}
inline ::std::string* PushToGroupReq::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:grpc.push.gateway.PushToGroupReq.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PushToGroupReq::release_data() {
  // @@protoc_insertion_point(field_release:grpc.push.gateway.PushToGroupReq.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PushToGroupReq::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:grpc.push.gateway.PushToGroupReq.data)
}

// map<uint32, string> key2Exstr = 10;
inline int PushToGroupReq::key2exstr_size() const {
  return key2exstr_.size();
}
inline void PushToGroupReq::clear_key2exstr() {
  key2exstr_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >&
PushToGroupReq::key2exstr() const {
  // @@protoc_insertion_point(field_map:grpc.push.gateway.PushToGroupReq.key2Exstr)
  return key2exstr_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >*
PushToGroupReq::mutable_key2exstr() {
  // @@protoc_insertion_point(field_mutable_map:grpc.push.gateway.PushToGroupReq.key2Exstr)
  return key2exstr_.MutableMap();
}

// uint64 seqid = 11;
inline void PushToGroupReq::clear_seqid() {
  seqid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PushToGroupReq::seqid() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.PushToGroupReq.seqid)
  return seqid_;
}
inline void PushToGroupReq::set_seqid(::google::protobuf::uint64 value) {
  
  seqid_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.PushToGroupReq.seqid)
}

// uint32 originalURI = 12;
inline void PushToGroupReq::clear_originaluri() {
  originaluri_ = 0u;
}
inline ::google::protobuf::uint32 PushToGroupReq::originaluri() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.PushToGroupReq.originalURI)
  return originaluri_;
}
inline void PushToGroupReq::set_originaluri(::google::protobuf::uint32 value) {
  
  originaluri_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.PushToGroupReq.originalURI)
}

// -------------------------------------------------------------------

// PushToGroupResp

// uint32 resCode = 1;
inline void PushToGroupResp::clear_rescode() {
  rescode_ = 0u;
}
inline ::google::protobuf::uint32 PushToGroupResp::rescode() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.PushToGroupResp.resCode)
  return rescode_;
}
inline void PushToGroupResp::set_rescode(::google::protobuf::uint32 value) {
  
  rescode_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.PushToGroupResp.resCode)
}

// bytes context = 2;
inline void PushToGroupResp::clear_context() {
  context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PushToGroupResp::context() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.PushToGroupResp.context)
  return context_.GetNoArena();
}
inline void PushToGroupResp::set_context(const ::std::string& value) {
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.push.gateway.PushToGroupResp.context)
}
#if LANG_CXX11
inline void PushToGroupResp::set_context(::std::string&& value) {
  
  context_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.push.gateway.PushToGroupResp.context)
}
#endif
inline void PushToGroupResp::set_context(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.push.gateway.PushToGroupResp.context)
}
inline void PushToGroupResp::set_context(const void* value, size_t size) {
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.push.gateway.PushToGroupResp.context)
}
inline ::std::string* PushToGroupResp::mutable_context() {
  
  // @@protoc_insertion_point(field_mutable:grpc.push.gateway.PushToGroupResp.context)
  return context_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PushToGroupResp::release_context() {
  // @@protoc_insertion_point(field_release:grpc.push.gateway.PushToGroupResp.context)
  
  return context_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PushToGroupResp::set_allocated_context(::std::string* context) {
  if (context != NULL) {
    
  } else {
    
  }
  context_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), context);
  // @@protoc_insertion_point(field_set_allocated:grpc.push.gateway.PushToGroupResp.context)
}

// uint64 seqid = 3;
inline void PushToGroupResp::clear_seqid() {
  seqid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PushToGroupResp::seqid() const {
  // @@protoc_insertion_point(field_get:grpc.push.gateway.PushToGroupResp.seqid)
  return seqid_;
}
inline void PushToGroupResp::set_seqid(::google::protobuf::uint64 value) {
  
  seqid_ = value;
  // @@protoc_insertion_point(field_set:grpc.push.gateway.PushToGroupResp.seqid)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace gateway
}  // namespace push
}  // namespace grpc

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::grpc::push::gateway::UserTerminalType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::grpc::push::gateway::UserTerminalType>() {
  return ::grpc::push::gateway::UserTerminalType_descriptor();
}
template <> struct is_proto_enum< ::grpc::push::gateway::StreamURI> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::grpc::push::gateway::StreamURI>() {
  return ::grpc::push::gateway::StreamURI_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_pushGateWay_2eproto
